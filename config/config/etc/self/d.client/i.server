#!/bin/sh
#############

 install -d -o "${USER}" -m 0700 "${HOME}/irc" && cd "${HOME}/irc" || exit 1

   [ -f "DEBUG" ] || install -o "${USER}" -m 0600 "/dev/null" "DEBUG"
   [ -f "ERROR" ] || install -o "${USER}" -m 0600 "/dev/null" "ERROR"
    [ -f "META" ] || install -o "${USER}" -m 0600 "/dev/null" "META"
  [ -f "NOTICE" ] || install -o "${USER}" -m 0600 "/dev/null" "NOTICE"
 [ -f "PRIVMSG" ] || install -o "${USER}" -m 0600 "/dev/null" "PRIVMSG"
    [ -f "SELF" ] || install -o "${USER}" -m 0600 "/dev/null" "SELF"
    [ -f "SENT" ] || install -o "${USER}" -m 0600 "/dev/null" "SENT"
  [ -f "filter" ] || install -o "${USER}" -m 0600 "/dev/null" "filter"

 [ -f "${shared}/contacts/self/public" ] && read onion < "${shared}/contacts/self/public"
 [ -f "${shared}/contacts/self/public" ] || onion="$(hexdump -n28 -ve '1/1 "%02x"'</dev/urandom)"

#############
#export LD_PRELOAD='/usr/lib64/libtorsocks.so'
#############
#server='libera75jm6of4wxpxt4aynol3xjmbtxgfyjpu34ss4d7r7q2v5zrpyd.onion:6697'
#############
account="spare"
nick="NICK $(tr -cd 'a-zA-Z'</dev/urandom|head -c13)"
user="USER ${onion:0:9} 0 0 :${onion:9:47}~"
#############
regain="PRIVMSG NickServ :regain ${account}"
#############
mode="MODE ${account} +iuwQR"
#############
channels="JOIN #libera,#gentoo-chat"
channels="${channels},#linux,#networking,#security"
channels="${channels},#gentoo,#archlinux,#debian"
channels="${channels},#gentoo-bugs,#gentoo-dev,#gentoo-security"
#############
red="\e[31m" green="\e[32m" yellow="\e[33m" blue="\e[34m" purple="\e[35m" cyan="\e[36m" white="\e[37m" grey="\e[38m" reset="\e[0m"
#############

  [ -f "sasl"  ] || exit
 [ -f ".ping"  ] && rm ".ping"
  [ -e "input" ] && rm "input"
  [ -e "input" ] || mkfifo -m 0600 "input"
  [ -e "input" ] && exec 3<>input

 printf "%s\n%s\n%s\n%s\n%s\n%s\n" "cap REQ sasl" "${nick}" "${user}" "AUTHENTICATE EXTERNAL" "AUTHENTICATE +" "CAP END" >&3 &

#############

#############

while sleep 60 ; do

 touch .ping

 printf "${cyan}%s${reset}\n" '#'

 printf "%s\n" "PING :irc.libera.chat" >&3

 sleep 13 && [ -f .ping ] && pkill -P$$

done &

#############

#openssl s_client -noservername -connect "${server}" -cert "sasl" -tls1_3 -verify 1 -verify_return_error -verify_quiet -quiet -verify_hostname 'palladium.libera.chat' <&3 |

openssl s_client -noservername -connect irc.libera.chat:6697 -cert "sasl" -tls1_3 -verify 1 -verify_return_error -verify_quiet -quiet <&3 |
tr -cd '[:alnum:]:!@#\n ' | 
while read -r sender type target message ; do [ "${sender:0:6}" == ":Guest" ] && { [ -z "${message}" ] || message="herp derp" ; }

 color="${green}" output="DEBUG"

   if [ "${type}" == "PRIVMSG" ] ; then

    [ "${target}" == "${account}" ] && color="\e[01;31m" output="SELF" || color="${red}" output="PRIVMSG"

    [[ "${message}" == "*:${account}*" ]] && highlight="${white}" || highlight="${reset}"
    [[ "${message}" == "* ${account}*" ]] && highlight="${white}" || highlight="${reset}"

 elif [ "${type}" == "NOTICE" ] ; then

    [ "${target}" == "${account}" ] && color="\e[01;33m" output="SELF" || color="${yellow}" output="NOTICE"

    [[ "${message}" == "*:${account}*" ]] && highlight="${white}" || highlight="${reset}"
    [[ "${message}" == "* ${account}*" ]] && highlight="${white}" || highlight="${reset}"

 elif [ "${type}" == "WALLOPS" ] ; then color="yellow" output="NOTICE"

 elif [ "${type}" == "PONG" ] ; then [ -f .ping ] && rm .ping ; color="${cyan}" output="META"

 elif [ "${sender}" == "PING" ] ; then printf "%s\n" "PONG ${type}" >&3 ; color="${cyan}" output="META"

 elif [ "${type}" == "NICK"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "MODE"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "JOIN"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "PART"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "QUIT"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "KICK"  ] ; then color="${grey}" output="META"
 elif [ "${type}" == "TOPIC" ] ; then color="${grey}" output="META"

 elif [ "${sender}" == "ERROR" ] ; then printf "%s\n" "[${account}] [${nick}] [${user}] [${sender} ${type} ${target} ${message}]" >> ERROR ; pkill -P$$

 elif [ "${type}" == "432" ] ; then printf "%s\n" "[${account}] [${nick}] [${user}] [${sender} ${type} ${target} ${message}]" >> ERROR ; pkill -P$$
 elif [ "${type}" == "433" ] ; then printf "%s\n" "[${account}] [${nick}] [${user}] [${sender} ${type} ${target} ${message}]" >> ERROR ; pkill -P$$
 elif [ "${type}" == "461" ] ; then printf "%s\n" "[${account}] [${nick}] [${user}] [${sender} ${type} ${target} ${message}]" >> ERROR ; pkill -P$$
 elif [ "${type}" == "904" ] ; then printf "%s\n" "[${account}] [${nick}] [${user}] [${sender} ${type} ${target} ${message}]" >> ERROR ; pkill -P$$

 elif [ "${type}" == "001" ] ; then printf "%s\n" "${regain}"   >&3 ; sleep 13
                                    printf "%s\n" "${mode}"     >&3 ; sleep 3
                                    printf "%s\n" "${channels}" >&3 ; printf "\n"

   fi

 rainbow_sender="\e[38;5;$((16#$(printf "%s\n" "${sender}"|openssl sha1|tail -c3)))m"
 rainbow_target="\e[38;5;$((16#$(printf "%s\n" "${target}"|openssl sha1|tail -c3)))m"
 trim="${sender:0:23}" ; until [ "${#trim}" -ge "23" ];do trim=" ${trim}";done

 printf "${color}%s${reset}" "#"

 printf "${rainbow_sender}%s${red}%s${rainbow_target}%s${highlight}%s${reset}\n" "[${trim}]" "[${type}]" "[${target}]" "[${message}]" >> "${output}"

done &

#############

wait

#############
#pkill sleep
#sleep "$(shuf -i3-13 -n1)"
#exec i.server
#############

