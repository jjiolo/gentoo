#!/usr/bin/sh
#############
## [uptime]---[oldest_log]-----[newest_log]-[epoch]
## epoch-uptime  == total length of time the system has been up
## newest-oldest == length of time recorded logs cover
## oldest-uptime == how long the systems been up since the last recorded log entry
#############
## percentage of covered logs in relation to total uptime
## percentage of missing logs in relation to total uptime
#############
cd /run/logs || exit 1
#############

 [ -s syslog   ] && oldest="$(awk 'NR==1{print$1" "$2" "$3}' syslog  )"
 [ -s syslog.0 ] && oldest="$(awk 'NR==1{print$1" "$2" "$3}' syslog.0)"
 [ -s syslog.1 ] && oldest="$(awk 'NR==1{print$1" "$2" "$3}' syslog.1)"
 [ -s syslog.2 ] && oldest="$(awk 'NR==1{print$1" "$2" "$3}' syslog.2)"
                    newest="$(awk 'END  {print$1" "$2" "$3}' syslog  )"

#############
oldest="${oldest} $(date +%Y)"
newest="${newest} $(date +%Y)"
#############
oldest="$(date --date="${oldest}" +%s)"
newest="$(date --date="${newest}" +%s)"
#############
epoch="$(date +%s)" uptime="$(uptime -s)" uptime="$(date --date="${uptime}" +%s)"
#############
missing=$((((${oldest}-${uptime})*100)/(${epoch}-${uptime})))
covered=$((((${newest}-${oldest})*100)/(${epoch}-${uptime})))
#############
printf "%s\n" "# covered:${covered}% # missing:${missing}%"
#############

