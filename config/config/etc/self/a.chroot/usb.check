#!/bin/sh
#############
cd "/tmp/a.bootfs" || exit ; echo '#############'
#############

{
#############
[ -f "EFI/boot/bootx64.efi" ] && openssl sha256 "EFI/boot/bootx64.efi" || printf "%s\n" "SHA2-256(EFI/boot/bootx64.efi)= missing"
#############
                       for i in client ; do [ -f "images/${i}" ] && openssl sha256 "images/${i}" || printf "%s\n" "SHA2-256(images/${i})= missing" ; done
for i in desktop laptop server virtual ; do [ -f "kernels/${i}" ] && openssl sha256 "kernels/${i}" || printf "%s\n" "SHA-256(kernels/${i})= missing" ; done
#############
                          for i in .client ; do [ -f "images/${i}" ] && openssl sha256 "images/${i}" || printf "%s\n" "SHA2-256(images/${i})= missing" ; done
for i in .desktop .laptop .server .virtual ; do [ -f "kernels/${i}" ] && openssl sha256 "kernels/${i}" || printf "%s\n" "SHA-256(kernels/${i})= missing" ; done
#############
for i in config.tar.gz config.torrent ; do [ -f "${i}" ] && openssl sha256 "${i}" || printf "%s\n" "SHA-256(${i})= missing" ; done ;
#############
[ -f "binhost.tar.gz" ] && openssl sha256 binhost.tar.gz || printf "%s\n" "SHA-256(binhost.tar.gz)= missing"
#############
} | tee .hashes | openssl sha256 ; echo '#############'
                  openssl sha256 hashes ; echo '#############'

