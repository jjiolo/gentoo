
umask 0077
#############
export bootfs="/tmp/a.bootfs"
export ephemeral="/tmp/z.ephemeral"
export local="/tmp/z.local"
export remote="/tmp/z.remote"
export storage="/tmp/storage"
#############
export home="${storage}/home"
export mount="${storage}/mount"
export services="${storage}/services"
export shared="${storage}/shared"
export stage3="${storage}/stage3"
#############
export ENV="/etc/profile"
export LANG="en_GB.UTF-8"
export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
export PATH="${PATH}:/etc/self/a.chroot:/etc/self/b.init"
export PATH="${PATH}:/etc/self/c.server:/etc/self/d.client"
export PATH="${PATH}:/etc/self/e.setpriv:/etc/self/f.sets"
export PATH="${PATH}:/etc/self/z.testing"
export EDITOR="vim" PAGER="less" LESSHISTFILE="/dev/null"
#############
export GNUPGHOME="${HOME}/.gnupg"
#############
export GIT_SSH="dbclient" GIT_EDITOR="vim" GIT_PAGER="less"
export GIT_AUTHOR_NAME="anon" GIT_AUTHOR_EMAIL="anon@domain.tld"
export GIT_COMMITTER_NAME="anon" GIT_COMMITTER_EMAIL="anon@domain.tld"
#############
export TMPDIR="/dev/shm"
#############
export MENUCONFIG_COLOR="mono"
#############

user="\[\e[01;32m\]" box="\[\e[01;30m\]" path="\[\e[01;34m\]" reset="\[\e[0m\]"
#############
[ "${USER}" == "root" ] && user="\[\e[01;31m\]"
[ "${USER}" == "user" ] && user="\[\e[01;33m\]"
#############
[ -z "${SSH_CONNECTION}" ] || box="\[\e[01;37m\]"
#############
[ "$(stat -c %i /)" == "1" ] || box="\[\e[01;37m\]"
#############
export PS1="${user}[\u]${reset}${box}[\h]${reset}${path}[\w][${SHLVL}]${reset} "
#############
unset user box path reset

############# - on
set +o errexit   # exit if command fails ( command || true )
set +o noglob    # disable path name expansion
set +o ignoreeof # ignore EOF (ctrl+d)
set -o monitor   # job control (ctrl+z)
set +o noexec    # do not execute on none interactive shells (syntax check)
set +o xtrace    # write each command to stderr
set +o verbose   # write input to stderr as its read
set -o noclobber # do not overwrite existing files
set +o allexport # source <file> sets variables in env
set +o notify    # asynchronous notification of background job completion
set +o nounset   # require variables to be declared
set +o errtrace  # trap <function> ERR
set +o vi        # enable vi built in
set -o pipefail  # returns false if any command fails rather than the last command
############# + off

#############
 ulimit -c 0         # core file size (blocks)
 ulimit -d unlimited # data seg size (kb)
 ulimit -e 0         # scheduling priority
 ulimit -f unlimited # file size (blocks) 14680064 
 ulimit -i 8192      # pending signals
 ulimit -l 64        # max locked memory (kb)
 ulimit -m unlimited # max memory size (kb)
 ulimit -n 4096      # open files
 ulimit -q 819200    # POSIX message queues (bytes)
 ulimit -r 0         # real-time priority
 ulimit -s 8192      # stack size (kb)
 ulimit -t unlimited # cpu time (seconds)
 ulimit -u 512       # max user processes
 ulimit -v unlimited # virtual memory (kb)
 ulimit -x unlimited # file locks
#############

#############
renice -10 -u root    2>/dev/null
renice +0  -u user    2>/dev/null
renice +20 -u nobody  2>/dev/null
renice +20 -u proxy   2>/dev/null
renice +20 -u jail    2>/dev/null

renice +0  -u audio   2>/dev/null
renice +0  -u video   2>/dev/null
renice +0  -u desktop 2>/dev/null
renice +10 -u qemu    2>/dev/null

renice -10 -u ddns    2>/dev/null
renice -10 -u dnsd    2>/dev/null
renice -10 -u dhcpd   2>/dev/null
renice -10 -u dhcpc   2>/dev/null
renice -10 -u tftpd   2>/dev/null
renice -10 -u ntpd    2>/dev/null

renice +10 -u httpd   2>/dev/null
renice +10 -u p2pd    2>/dev/null

renice +20 -u smtp    2>/dev/null
renice +20 -u http    2>/dev/null
renice +20 -u irc     2>/dev/null
renice +20 -u xmr     2>/dev/null
#############

#############

[ -f "/usr/bin/less" ] && alias less="/usr/bin/less -R"

 alias l='ls -lh --group-directories-first'
 alias ll='ls -lah --group-directories-first'
 alias c='clear'
 alias ..='cd ..'

[ -L /bin/ps ] && alias ps="ps -o sid,pid,ppid,user,group,nice,etime,comm|awk '\$1 != 2 && \$2 != 2'"
[ -L /bin/ps ] && alias psw="watch -t ps -o sid,pid,ppid,user,group,nice,etime,comm|awk '\$1 != 2 && \$2 != 2'"

[ -L /bin/ps ] || alias ps='/bin/ps fo sid,pid,ppid,uid,gid,pcpu,pmem,pri,ni,tty,etime,comm --pid 2 --ppid 2 -N'
[ -L /bin/ps ] || alias psw='watch -t /bin/ps fo sid,pid,ppid,uid,gid,pcpu,pmem,pri,ni,tty,etime,comm --pid 2 --ppid 2 -N'

 alias log='tail -F /run/logs/syslog'
 alias ffs='tail -F /run/logs/syslog|grep -v "^....................kernel:"'

 alias hex="hexdump -ve '1/1 \"%02x\"'"
 alias random="tr -cd 'a-zA-Z0-9'</dev/urandom|head -c16;echo"

 alias suid='find / -xdev -perm -4000 -exec ls -lah {} \;|less'
 alias guid='find / -xdev -perm -2000 -exec ls -lah {} \;|less'
 alias caps='find / -xdev -type f -exec getcap {} 2>/dev/null \;'
 alias libs='find ${PATH//:/ } /lib /lib64 /usr/lib /usr/lib64 -xdev -type f -exec sh /usr/bin/ldd {} 2>/dev/null \; | grep -i "not found" | sort -u'

 alias t='transmission-remote --unix-socket ${services}/p2pd/.config/socket'
 alias tt='watch -tn3 transmission-remote --unix-socket ${services}/p2pd/.config/socket -l'

 alias torsocks="export LD_PRELOAD='/usr/lib64/libtorsocks.so'"

 alias screen="ffmpeg -f alsa -i hw:1 -f x11grab -i :0.0 /tmp/screen.mp4"
 alias screenshot="ffmpeg -f x11grab -i :0.0 -frames:v 1 /tmp/screenshot.jpg"

 alias cam="ffmpeg -f alsa -i hw:1 -f video4linux2 -i /dev/video0 /tmp/webcam.mp4"
 alias camshot="ffmpeg -f video4linux2 -i /dev/video0 -frames:v 1 /tmp/webshot.jpg"

 alias record="arecord /tmp/record.wav"
 alias play="aplay /tmp/record.wav"

 alias mpv="mpv --sid=no"

 alias tmux="dtach -A ${HOME}/socket mtm -t mtm-256color"

#############

#############
alsa(){ sed -i -e "s/defaults.ctl.card ./defaults.ctl.card ${1}/" -e "s/defaults.pcm.card ./defaults.pcm.card ${1}/" /run/alsa.conf ; }
deps(){ ldd "$(which ${1})" | while read ; do find /var/db/pkg -name CONTENTS -exec grep -l ${REPLY%% *} {} \; ; done ; }
#############

#############
[ -d "${HOME:-.}/.vim"      ] && { chattr -i "${HOME:-.}/.vim"      ; rm -rf "${HOME:-.}/.vim" ;      }
[ -f "${HOME:-.}/.exrc"     ] && { chattr -i "${HOME:-.}/.exrc"     ; rm -rf "${HOME:-.}/.exrc" ;     }
[ -f "${HOME:-.}/_exrc"     ] && { chattr -i "${HOME:-.}/_exrc"     ; rm -rf "${HOME:-.}/_exrc" ;     }
[ -f "${HOME:-.}/.vimrc"    ] && { chattr -i "${HOME:-.}/.vimrc"    ; rm -rf "${HOME:-.}/.vimrc" ;    }
[ -f "${HOME:-.}/_vimrc"    ] && { chattr -i "${HOME:-.}/_vimrc"    ; rm -rf "${HOME:-.}/_vimrc" ;    }
#############
[ -f "${HOME:-.}/.terminfo" ] && { chattr -i "${HOME:-.}/.terminfo" ; rm -rf "${HOME:-.}/.terminfo" ; }
[ -f "${HOME:-.}/.profile"  ] && { chattr -i "${HOME:-.}/.profile"  ; rm -rf "${HOME:-.}/.profile" ;  }
#############

