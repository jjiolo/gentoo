#!/bin/sh
#############
. variables

#############
usage(){ printf "\n${0} - ${1}\ncreate a tmp key signed by the root certificate\n\n";exit; }

#############
read -rp 'enter persistent passphrase: ' persistent
printf "%s" "${persistent}"|openssl ec -in "${persistent_pem}" -passin stdin -out /dev/null || usage "incorrect persistent passphrase"
printf "%s" "${persistent}" > "${passphrase_persistent}"
unset persistent

#############
if [[ -f "${tmp_pem}" && -f "${tmp_crt}" ]];then

 fingerprint="$(openssl x509 -in "${tmp_crt}" -noout -fingerprint -sha1|cut -d "=" -f "2"|tr -d ":")"
 expire="$(($(date --date="$(openssl x509 -in "${persistent_crt}" -noout -enddate|cut -d "=" -f "2"|head -c "-5")" +%s)-$(date +%s)))"
 [[ "${expire}" -gt "0" ]] && expire="${expire}" || expire="expired"

 unset prompt;until [[ "${prompt}" == "y" || "${prompt}" == "n" ]];do read -rp "tmp:${expire} revoke and create a new key (y|n)? " prompt;done
 [[ "${prompt}" == "n" ]] && usage "y u no use brain..."

 openssl dgst -sha512 -sign "${persistent_pem}" -passin file:"${passphrase_persistent}" -out "${revoke}/${fingerprint}.sig" "${tmp_crt}"
 mv "${tmp_crt}" "${revoke}/${fingerprint}.crt"
 rm "${tmp_pem}"
fi

#############
openssl ecparam -genkey -name "${curve}" -out "${tmp_pem}"
openssl req -new -config "${openssl}" -extensions tmp_extension -sha512 -key "${tmp_pem}" -subj "/CN=tmp"|
openssl ca -batch -config "${openssl}" -name persistent_ca -extensions tmp_extension -policy tmp_policy -days 1 -notext -in /dev/stdin -passin file:"${passphrase_persistent}" -out "${tmp_crt}"

#############
rm "${passphrase_persistent}"

