#!/bin/sh
#############
. variables

#############
usage(){ printf "\n${0} - ${1}\n-c contact\n-i input\n-r root\n-p persistent\n-t tmp\n-h help\n\n";exit; }

#############
while getopts "c:i:rpth" arg;do
 case "${arg}" in
  c) contact="${OPTARG}";;
  i) input="${OPTARG}";;
  r) key="root";;
  p) key="persistent";;
  t) key="tmp";;
  h) usage "encrypt input";;
  *) usage "encrypt input";;
 esac
done

#############
[[ -z "${key}" ]] && usage "requires an encryption key"
[[ ! -z "${contact}" && -d "${contacts}/${contact}" ]]||usage "contact does not exist"
[[ -f "${input}" ]] || usage "input does not exist"
[[ -f "${input}.key" ]] && usage "input.key already exists"
[[ -f "${input}.enc" ]] && usage "input.enc already exists"

#############
contact_variables "${contact}"
contact_verify||usage "${debug}"

#############
[[ "${key}" == "root"      ]] && openssl x509 -pubkey -noout -in "${contact_root}"       > "${public_key}"
[[ "${key}" == "persitent" ]] && openssl x509 -pubkey -noout -in "${contact_persistent}" > "${public_key}"
[[ "${key}" == "tmp"       ]] && openssl x509 -pubkey -noout -in "${contact_tmp}"        > "${public_key}"

ephemeral="$(openssl genpkey -algorithm ec -pkeyopt ec_paramgen_curve:brainpoolP512r1)"
printf "%s" "${ephemeral}"|openssl ec -pubout -in /dev/stdin -out "${input}.key"
secret="$(printf "%s" "${ephemeral}"|openssl pkeyutl -derive -inkey /dev/stdin -peerkey "${public_key}"|openssl sha384|cut -d' ' -f2)"
openssl enc -e -salt -base64 -md sha512 -aes-256-cbc -iv "${secret:64:32}" -K "${secret:0:64}" -in "${input}" -out "${input}.enc"
[[ -f "${input}.dgst" && ! -f "${input}.sig" ]] && 
openssl enc -e -salt -base64 -md sha512 -aes-256-cbc -iv "${secret:64:32}" -K "${secret:0:64}" -in "${input}.dgst" -out "${input}.sig"

