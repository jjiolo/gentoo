#############
server:
 verbosity: 1 # verbosity number, 0 is least verbose. 1 is default.
 statistics-interval: 0 # print statistics to the log (for every thread) every N seconds. Set to "" or 0 to disable. Default is disabled.
 shm-enable: no # enable shm for stats, default no.  if you enable also enable statistics-interval, every time it also writes stats to the shared memory segment keyed with shm-key.
#shm-key: 11777 # shm for stats uses this key, and key+1 for the shared mem segment.
 statistics-cumulative: no # enable cumulative statistics, without clearing them after printing.
 extended-statistics: no # enable extended statistics (query types, answer codes, status) printed from unbound-control. default off, because of speed.
 num-threads: 1 # number of threads to create. 1 disables threading.
 interface: 192.168.1.1
 interface: fd01::1
 interface-automatic: no # enable this feature to copy the source address of queries to reply. Socket options are not supported on all platforms. experimental.
 port: 53 # port to answer queries from
#outgoing-interface: (all) # specify the interfaces to send outgoing queries to authoritative server from by ip-address. If none, the default (all) interface is used. Specify every interface on a 'outgoing-interface:' line.
#outgoing-interface: 2001:DB8::/64 # Specify a netblock to use remainder 64 bits as random bits for upstream queries.  Uses freebind option (Linux).
 prefer-ip6: no # Also (Linux:) ip -6 addr add 2001:db8::/64 dev lo And: ip -6 route add local 2001:db8::/64 dev lo And set prefer-ip6: yes to use the ip6 randomness from a netblock. Set this to yes to prefer ipv6 upstream servers over ipv4.
 outgoing-range: 4096 # number of ports to allocate per thread, determines the size of the port range that can be open simultaneously. About double the num-queries-per-thread, or, use as many as the OS will allow you.
 outgoing-port-permit: 32768-60999 # permit unbound to use this port number or port range for making outgoing queries, using an outgoing interface.
#outgoing-port-avoid: "3200-3208" # deny unbound the use this of port number or port range for making outgoing queries, using an outgoing interface.
#outgoing-num-tcp: 10 # number of outgoing simultaneous tcp buffers to hold per thread.
#incoming-num-tcp: 10 # number of incoming simultaneous tcp buffers to hold per thread.
#so-rcvbuf: 0 # buffer size for UDP port 53 incoming (SO_RCVBUF socket option). 0 is system default.  Use 4m to catch query spikes for busy servers.
#so-sndbuf: 0 # buffer size for UDP port 53 outgoing (SO_SNDBUF socket option). 0 is system default.  Use 4m to handle spikes on very busy servers.
#so-reuseport: no # use SO_REUSEPORT to distribute queries over threads.
#ip-transparent: no # use IP_TRANSPARENT so the interface: addresses can be non-local and you can config non-existing IPs that are going to work later on (uses IP_BINDANY on FreeBSD).
#ip-freebind: no # use IP_FREEBIND so the interface: addresses can be non-local and you can bind to nonexisting IPs and interfaces that are down. Linux only.  On Linux you also have ip-transparent that is similar.
#edns-buffer-size: 4096 # EDNS reassembly buffer to advertise to UDP peers (the actual buffer is set with msg-buffer-size). 1472 can solve fragmentation (timeouts)
#max-udp-size: 4096 # Maximum UDP response size (not applied to TCP response). Suggested values are 512 to 4096. Default is 4096. 65536 disables it.
#msg-buffer-size: 65552 # buffer size for handling DNS data. No messages larger than this size can be sent or received, by UDP or TCP. In bytes.
#msg-cache-size: 4m # the amount of memory to use for the message cache. plain value in bytes or you can append k, m or G. default is "4Mb".
#msg-cache-slabs: 4 # the number of slabs to use for the message cache. the number of slabs must be a power of 2. more slabs reduce lock contention, but fragment memory usage.
#num-queries-per-thread: 1024 # the number of queries that a thread gets to service.
#jostle-timeout: 200 # if very busy, 50% queries run to completion, 50% get timeout in msec
#delay-close: 0 # msec to wait before close of port on timeout UDP. 0 disables.
#rrset-cache-size: 4m # the amount of memory to use for the RRset cache. plain value in bytes or you can append k, m or G. default is "4Mb".
#rrset-cache-slabs: 4 # the number of slabs to use for the RRset cache. the number of slabs must be a power of 2. more slabs reduce lock contention, but fragment memory usage.
#cache-min-ttl: 0 # the time to live (TTL) value lower bound, in seconds. Default 0. If more than an hour could easily give trouble due to stale data.
#cache-max-ttl: 86400 # the time to live (TTL) value cap for RRsets and messages in the cache. Items are not cached for longer. In seconds.
#cache-max-negative-ttl: 3600 # the time to live (TTL) value cap for negative responses in the cache
#infra-host-ttl: 900 # the time to live (TTL) value for cached roundtrip times, lameness and EDNS version information for hosts. In seconds.
#infra-cache-min-rtt: 50 # minimum wait time for responses, increase if uplink is long. In msec.
#infra-cache-slabs: 4 # the number of slabs to use for the Infrastructure cache. the number of slabs must be a power of 2. more slabs reduce lock contention, but fragment memory usage.
#infra-cache-numhosts: 10000 # the maximum number of hosts that are cached (roundtrip, EDNS, lame).
#############
#define-tag: "tag1 tag2 tag3" # define a number of tags here, use with local-zone, access-control. repeat the define-tag statement to add additional tags.
 do-ip4: yes # Enable IPv4, "yes" or "no".
 do-ip6: yes # Enable IPv6, "yes" or "no".
 do-udp: yes # Enable UDP, "yes" or "no".
 do-tcp: yes # Enable TCP, "yes" or "no".
 tcp-upstream: yes # upstream connections use TCP only (and no UDP), "yes" or "no" useful for tunneling scenarios, default no.
#udp-upstream-without-downstream: no # upstream connections also use UDP (even if do-udp is no). useful if if you want UDP upstream, but don't provide UDP downstream.
#tcp-mss: 0 # Maximum segment size (MSS) of TCP socket on which the server responds to queries. Default is 0, system default MSS.
#outgoing-tcp-mss: 0 # Maximum segment size (MSS) of TCP socket for outgoing queries. # Default is 0, system default MSS.
#use-systemd: no # Use systemd socket activation for UDP, TCP, and control sockets.
 do-daemonize: yes # Detach from the terminal, run in background, "yes" or "no". Set the value to "no" when unbound runs as systemd service.
#############
 access-control: 192.168.1.0/24 allow # control which clients are allowed to make (recursive) queries By default everything is refused, except for localhost. Choose deny (drop message), refuse (polite error reply), allow (recursive ok), allow_snoop (recursive and nonrecursive ok) deny_non_local (drop queries unless can be answered from local-data) refuse_non_local (like deny_non_local but polite error reply).
#############
 chroot: ""
 username: "unbound" # if given, user privileges are dropped (after binding port), and the given username is assumed. Default is user "unbound". If you give "" no privileges are dropped.
 directory: "/tmp" #the working directory. The relative files in this config are relative to this directory. If you give "" the working directory is not changed.
#logfile: "" # the log file, "" means log to stderr. # Use of this option sets use-syslog to "no".
 use-syslog: yes # Log to syslog(3) if yes. The log facility LOG_DAEMON is used to log to. If yes, it overrides the logfile.
#log-identity: "" # Log identity to report. if empty, defaults to the name of argv[0] (usually "unbound").
#log-time-ascii: no # print UTC timestamp in ascii to logfile, default is epoch in seconds.
 log-queries: yes # print one line with time, IP, name, type, class for every query.
 log-replies: no # print one line per reply, with time, IP, name, type, class, rcode, timetoresolve, fromcache and responsesize.
 pidfile: "" # the pid file. Can be an absolute path outside of chroot/work dir.
#root-hints: "" # file to read root hints from. get one from https://www.internic.net/domain/named.cache
 hide-identity: yes # enable to not answer id.server and hostname.bind queries.
 hide-version: yes # enable to not answer version.server and version.bind queries.
 hide-trustanchor: yes # enable to not answer trustanchor.unbound queries.
#identity: "" # the identity to report. Leave "" or default to return hostname.
#version: "" # the version to report. Leave "" or default to return package version.
#target-fetch-policy: "3 2 1 0 0" #the target fetch policy. series of integers describing the policy per dependency depth. The number of values in the list determines the maximum dependency depth the recursor will pursue before giving up. Each integer means: -1 : fetch all targets opportunistically, 0: fetch on demand, positive value: fetch that many targets opportunistically. Enclose the list of numbers between quotes ("").
#############
 harden-short-bufsize: yes # Harden against very small EDNS buffer sizes.
 harden-large-queries: yes # Harden against unseemly large queries.
 harden-glue: yes # Harden against out of zone rrsets, to avoid spoofing attempts.
 harden-dnssec-stripped: yes # Harden against receiving dnssec-stripped data. If you turn it off, failing to validate dnskey data for a trustanchor will trigger insecure mode for that zone (like without a trustanchor). Default on, which insists on dnssec data for trust-anchored zones.
 harden-below-nxdomain: yes # Harden against queries that fall under dnssec-signed nxdomain names.
 harden-referral-path: yes # Harden the referral path by performing additional queries for infrastructure data.  Validates the replies (if possible). Default off, because the lookups burden the server.  Experimental implementation of draft-wijngaards-dnsext-resolver-side-mitigation.
 harden-algo-downgrade: yes # Harden against algorithm downgrade when multiple algorithms are advertised in the DS record.  If no, allows the weakest algorithm to validate the zone.
 qname-minimisation: yes # Sent minimum amount of information to upstream servers to enhance privacy. Only sent minimum required labels of the QNAME and set QTYPE to NS when possible.
 qname-minimisation-strict: no # QNAME minimisation in strict mode. Do not fall-back to sending full QNAME to potentially broken nameservers. A lot of domains will not be resolvable when this option in enabled. This option only has effect when qname-minimisation is enabled.
#use-caps-for-id: no # Use 0x20-encoded random bits in the query to foil spoof attempts. This feature is an experimental implementation of draft dns-0x20.
#caps-whitelist: "example.com" # Domains (and domains in them) without support for dns-0x20 and the fallback fails because they keep sending different answers.
############# private
#Enforce privacy of these addresses. Strips them away from answers. It may cause DNSSEC validation to additionally mark it as bogus. Protects against 'DNS Rebinding' (uses browser as network proxy). Only 'private-domain' and 'local-data' names are allowed to have these private addresses. No default.
private-address: 127.0.0.0/8
private-address: 10.0.0.0/8
private-address: 172.16.0.0/12
private-address: 192.168.0.0/16
private-address: 169.254.0.0/16
private-address: ::1
private-address: fd00::/8
private-address: fe80::/10
private-address: ::ffff:0:0/96
#private-domain: "example.com" # Allow the domain (and its subdomains) to contain private addresses. local-data statements are allowed to contain private addresses too.
#unwanted-reply-threshold: 0 # If nonzero, unwanted replies are not only reported in statistics, but also a running total is kept per thread. If it reaches the threshold, a warning is printed and a defensive action is taken, the cache is cleared to flush potential poison out of it. A suggested value is 10000000, the default is 0 (turned off).
#do-not-query-address: 127.0.0.1/8 # Do not query the following addresses. No DNS queries are sent there. List one address per entry. List classless netblocks with /size,
#do-not-query-localhost: yes # if yes, the above default do-not-query-address entries are present. if no, localhost can be queried (for testing and debugging).
#prefetch: no # if yes, perform prefetching of almost expired message cache entries.
#prefetch-key: no # if yes, perform key lookups adjacent to normal lookups.
#rrset-roundrobin: no # if yes, Unbound rotates RRSet order in response.
 minimal-responses: yes # if yes, Unbound doesn't insert authority/additional sections into response messages when those sections are not required.
#############
#disable-dnssec-lame-check: no # true to disable DNSSEC lameness check in iterator.
############# modules
#module-config: "validator iterator" # module configuration of the server. A string with identifiers separated by spaces. Syntax: "[dns64] [validator] iterator"
############# dnssec
#auto-trust-anchor-file: "/etc/unbound/root-anchors" # File with trusted keys, kept uptodate using RFC5011 probes, initial file like trust-anchor-file, then it stores metadata. Use several entries, one per domain name, to track multiple zones. If you want to perform DNSSEC validation, run unbound-anchor before you start unbound (i.e. in the system boot scripts).  And enable: Please note usage of unbound-anchor root anchor is at your own risk and under the terms of our LICENSE (see that file in the source).
#trust-anchor-signaling: yes # trust anchor signaling sends a RFC8145 key tag query after priming.
#dlv-anchor-file: "dlv.isc.org.key" # File with DLV trusted keys. Same format as trust-anchor-file. There can be only one DLV configured, it is trusted from root down. DLV is going to be decommissioned.  Please do not use it any more.
 trust-anchor-file: "/tmp/root-anchors" # File with trusted keys for validation. Specify more than one file with several entries, one file per entry. Zone file format, with DS and DNSKEY entries. Note this gets out of date, use auto-trust-anchor-file please.
#Trusted key for validation. DS or DNSKEY. specify the RR on a single line, surrounded by "". TTL is ignored. class is IN default. Note this gets out of date, use auto-trust-anchor-file please. (These examples are from August 2007 and may not be valid anymore).
#trust-anchor: "nlnetlabs.nl. DNSKEY 257 3 5 AQPzzTWMz8qSWIQlfRnPckx2BiVmkVN6LPupO3mbz7FhLSnm26n6iG9N Lby97Ji453aWZY3M5/xJBSOS2vWtco2t8C0+xeO1bc/d6ZTy32DHchpW 6rDH1vp86Ll+ha0tmwyy9QP7y2bVw5zSbFCrefk8qCUBgfHm9bHzMG1U BYtEIQ=="
#trust-anchor: "jelte.nlnetlabs.nl. DS 42860 5 1 14D739EB566D2B1A5E216A0BA4D17FA9B038BE4A"
#trusted-keys-file: "" # File with trusted keys for validation. Specify more than one file with several entries, one file per entry. Like trust-anchor-file but has a different file format. Format is BIND-9 style format, the trusted-keys { name flag proto algo "key"; }; clauses are read. you need external update procedures to track changes in keys.
#domain-insecure: "example.com" # Ignore chain of trust. Domain is treated as insecure.
#val-override-date: "" # Override the date for validation with a specific fixed date. Do not set this unless you are debugging signature inception and expiration. "" or "0" turns the feature off. -1 ignores date.
#val-bogus-ttl: 60 # The time to live for bogus data, rrsets and messages. This avoids some of the revalidation, until the time interval expires. in secs.
# The signature inception and expiration dates are allowed to be off by 10% of the signature lifetime (expir-incep) from our local clock. This leeway is capped with a minimum and a maximum.  In seconds.
#val-sig-skew-min: 3600
#val-sig-skew-max: 86400
 val-clean-additional: yes # Should additional section of secure message also be kept clean of unsecure data. Useful to shield the users of this validator from potential bogus data in the additional section. All unsigned data in the additional section is removed from secure messages.
 val-permissive-mode: no # Turn permissive mode on to permit bogus messages. Thus, messages for which security checks failed will be returned to clients, instead of SERVFAIL. It still performs the security checks, which result in interesting log files and possibly the AD bit in replies if the message is found secure. The default is off.
#ignore-cd-flag: no # Ignore the CD flag in incoming queries and refuse them bogus data. Enable it if the only clients of unbound are legacy servers (w2008) that set CD but cannot validate themselves.
 serve-expired: no # Serve expired responses from cache, with TTL 0 in the response, and then attempt to fetch the data afresh.
#val-log-level: 0 # Have the validator log failed validations for your diagnosis. 0: off. 1: A line per failed user query. 2: With reason and bad IP.
#val-nsec3-keysize-iterations: "1024 150 2048 500 4096 2500" # It is possible to configure NSEC3 maximum iteration counts per keysize. Keep this table very short, as linear search is done. A message with an NSEC3 with larger count is marked insecure. List in ascending order the keysize and count values.
#add-holddown: 2592000 # 30 days # instruct the auto-trust-anchor-file probing to add anchors after ttl.
#del-holddown: 2592000 # 30 days # instruct the auto-trust-anchor-file probing to del anchors after ttl.
#keep-missing: 31622400 # 366 days # auto-trust-anchor-file probing removes missing anchors after ttl. If the value 0 is given, missing anchors are not removed.
#permit-small-holddown: no # debug option that allows very small holddown times for key rollover, otherwise the RFC mandates probe intervals must be at least 1 hour.
#key-cache-size: 4m # the amount of memory to use for the key cache. plain value in bytes or you can append k, m or G. default is "4Mb".
#key-cache-slabs: 4 # the number of slabs to use for the key cache. the number of slabs must be a power of 2. more slabs reduce lock contention, but fragment memory usage.
#neg-cache-size: 1m # the amount of memory to use for the negative cache (used for DLV). plain value in bytes or you can append k, m or G. default is "1Mb".
############# local-zone
#unblock-lan-zones: no
#insecure-lan-zones: no
#include: "adblocker"
############# ssl
 ssl-upstream: yes # request upstream over SSL (with plain DNS inside the SSL stream). Default is no. Can be turned on and off with unbound-control.
#ssl-service-key: "/etc/unbound/unbound.pem"
#ssl-service-pem: "/etc/unbound/unbound.crt"
#ssl-port: 853
############# ratelimit
#ratelimit: 0 # ratelimit for uncached, new queries, this limits recursion effort. ratelimiting is experimental, and may help against randomqueryflood. if 0(default) it is disabled, otherwise state qps allowed per zone.
#ratelimit-size: 4m # ratelimits are tracked in a cache, size in bytes of cache (or k,m).
#ratelimit-slabs: 4 # ratelimit cache slabs, reduces lock contention if equal to cpucount.
#ratelimit-factor: 10 # 0 blocks when ratelimited, otherwise let 1/xth traffic through
#ratelimit-for-domain: example.com 1000 # override the ratelimit for a specific domain name. give this setting multiple times to have multiple overrides.
#ratelimit-below-domain: com 1000 # override the ratelimits for all domains below a domain name can give this multiple times, the name closest to the zone is used.
#ip-ratelimit: 0 # global query ratelimit for all ip addresses. feature is experimental. if 0(default) it is disabled, otherwise states qps allowed per ip address
#ip-ratelimit-size: 4m # ip ratelimits are tracked in a cache, size in bytes of cache (or k,m).
#ip-ratelimit-slabs: 4 # ip ratelimit cache slabs, reduces lock contention if equal to cpucount.
#ip-ratelimit-factor: 10 # 0 blocks when ip is ratelimited, otherwise let 1/xth traffic through
############# remote control
remote-control: # Remote control config section.
 control-enable: no # Enable remote control with unbound-control(8) here. set up the keys and certificates with unbound-control-setup.
#control-use-cert: yes # Set to no and use an absolute path as control-interface to use a unix local named pipe for unbound-control.
#control-interface: 127.0.0.1 # what interfaces are listened to for remote control. give 0.0.0.0 and ::0 to listen to all interfaces.
#control-port: 8953 # port number for remote control operations.
#server-key-file: "/etc/unbound/unbound_server.key" # unbound server key file.
#server-cert-file: "/etc/unbound/unbound_server.pem" # unbound server certificate file.
#control-key-file: "/etc/unbound/unbound_control.key" # unbound-control key file.
#control-cert-file: "/etc/unbound/unbound_control.pem" # unbound-control certificate file.
############# forward zones
include: "/etc/upstream"
#############
