#!/bin/sh
#############
scale(){
   if [ "${#1}" -lt "4"  ];then tmp="${1}b"
 elif [ "${#1}" -lt "7"  ];then tmp="$((${1}/1000))k"
 elif [ "${#1}" -lt "10" ];then tmp="$((${1}/1000000))m"
 else                           tmp="$((${1}/1000000000))g";fi
 printf "%s\n" "${tmp}"
}
 left(){ tmp="${1}";until [ "${#tmp}" -ge "${2}" ];do tmp="${tmp} ";done;printf "%s\n" "${tmp:0:${2}}"; }
right(){ tmp="${1}";until [ "${#tmp}" -ge "${2}" ];do tmp=" ${tmp}";done;printf "%s\n" "${tmp:0:${2}}"; }
#############

#############
while :;do
#############
output=""
user0="${user1:-0}"
system0="${system1:-0}"
idle0="${idle1:-0}"
iowait0="${iowait1:-0}"
write0="${write1:-0}"
read0="${read1:-0}"
receive0="${receive1:-0}"
transmit0="${transmit1:-0}"
#############
sync &
#############
read user1 system1 idle1 iowait1 << EOF
$(awk 'NR==1{print$2" "$4" "$5" "$6}' /proc/stat)
EOF
read ram_total ram_available << EOF
$(awk '/MemTotal:|MemAvailable:/{printf$2" "}' /proc/meminfo)
EOF
read one five fifteen processes pid < /proc/loadavg
read read1 write1 << EOF
$(awk '{read+=$6;write+=$10}END{print read" "write}' /proc/diskstats)
EOF
read  dirty writeback << EOF
$(awk '/Dirty:|Writeback:/{printf" "$2}' /proc/meminfo)
EOF
read receive1 transmit1 << EOF
$(awk 'NR>2{receive+=$2;transmit+=$10}END{print receive" "transmit}' /proc/net/dev)
EOF
#############
cpu_active="$(((${user1}-${user0})+(${system1}-${system0})+(${iowait1}-${iowait0})))"
cpu_total="$((${cpu_active}+(${idle1}-${idle0})))"
cpu_pct="$((${cpu_active}*100/${cpu_total}))"
output="${output} [$(right ${cpu_pct} 3)%]"
#############
ram_pct="$((100*(${ram_total}-${ram_available})/${ram_total}))"
output="${output} [$(right ${ram_pct} 3)%]"
#############
output="${output} [$(right ${one} 4) $(right ${five} 4) $(right ${fifteen} 4) $(right ${processes} 5) $(right ${pid} 5)]"
#############
output="${output} [$(awk '$4=="07"{print}' /proc/net/udp /proc/net/udp6|wc -l)"
output="${output}:$(awk '$4=="01"{print}' /proc/net/udp /proc/net/udp6|wc -l)]"
output="${output} [$(awk '$4=="0A"{print}' /proc/net/tcp /proc/net/tcp6|wc -l)"
output="${output}:$(awk '$4=="01"{print}' /proc/net/tcp /proc/net/tcp6|wc -l)]"
#############
receive="$((${receive1}-${receive0}))"
transmit="$((${transmit1}-${transmit0}))"
output="${output} [v$(right $(scale ${receive}) 6) ^$(right $(scale ${transmit}) 6)]"
#############
read="$(((${write1}-${write0})*512))"
write="$(((${read1}-${read0})*512))"
output="${output} [v$(right $(scale ${read}) 6) ^$(right $(scale ${write}) 6) ]"
#############
output="${output} [$(right $(scale ${dirty}) 6) $(right $(scale ${writeback}) 6)]"
#############
output="${output} [$(date -u -d @"$(awk -F . '{print$1}' /proc/uptime)" +"%H:%M:%S")]"
output="${output} [$(date +"%d/%m/%y %H:%M:%S")]"
#############
if [ -d /sys/class/power_supply/BAT0 ];then
read -r charge_full</sys/class/power_supply/BAT0/charge_full
read -r charge_now</sys/class/power_supply/BAT0/charge_now
power="$(((${charge_now}*100)/${charge_full}))"
[ "${power}" -lt "5" ] && output=" ############# ############# ################ ############# ############# ############# ############# ############# ############# ########## "
[ "${power}" -gt "5" ] && output="${output} [${power}%]"
fi
#############
[ "${#}" == "1" ] && xsetroot -name "${output}" || printf "%s\n" "${output}"
sleep 1
done
#############
