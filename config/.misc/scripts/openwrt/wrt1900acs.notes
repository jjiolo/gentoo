
#############

[gnd] [tx] [] [rx] [] [] # left to right with the blinky lights front of the router facing you

./chroot.shell -u nobody
openwrt
git branch -a
git checkout openwrt-19.07 # if not using master
cp -a files openwrt/
cp -a config openwrt/.config
cp -a radvd openwrt/package/radvd/Makefile
cp -a busybox openwrt/package/utils/busybox/Makefile
openwrtu

serial tty
poweron - leaving the usb cable plugged in during power on makes it appear as a sata device...
plug usb in
microcom -s 115200 /dev/ttyUSB0 - any key to interupt bootprocess

> env set firmwareName 192.168.1.222:bin
> run flash_pri_image
> run nandboot
> run flash_alt_image
> run altnandboot

#############

make kernel_menuconfig doesnt work

busybox grep wont compile

unbound and openssl dont work tried enabling the entire lib/ssl/<everything>

wan_interfaces - not attached to anything
eth0  - interface
wlan2 - usb_wifi_interface

lan_interface - attached to bridge lan
eth1   - switch
wlan0  - 2g interface
wlan1  - 5g interface

masquerade - eth1/wlan2

ip link set up eth1
ip addr add 192.168.0.3/24 eth1
ip link set up eth1
ip addr add 192.168.0.5/24 wlan2

ip route add default via 192.168.0.1

wpa_supplicant tehwifi
hostapd.conf 2g/5g muhwifi
lan udhcpd 192.168.1.0/24

/root/wired /root/wireless - toggle wan interface...

dmz to either 192.168.0.3 wired || 192.168.0.5 wireless

openwrt to dnat all traffic for 192.168.0.{3,5} to 192.168.1.9

#############

git clone https://github.com/openwrt/openwrt.git /var/empty/openwrt

cd /var/empty/openwrt

git branch -a
git checkout openwrt-18.06
git checkout openwrt-19.04

master || openwrt-XX.YY || openwrt-XX.YY

oldest doesnt support nftables fully && make kernel_menuconfig stopped working to build it manually

master creates binaries that dont execute

testing in the middle...

#############

# host
ip link set down
ip addr flush
ip addr add 192.168.1.XXX/24
ip link set up

# uboot env
ipaddr=192.168.1.1
defaultLoadAddr=0x2000000
firmwareName=cobra.img
 altKernAddr=0x3200000 altFwSize=0x2800000
 altKernSize=0x0600000
 priKernAddr=0x0a00000 priFwSize=0x2800000
 priKernSize=0x0600000

flash_pri_image=tftpboot $defaultLoadAddr $firmwareName && nand erase $priKernAddr $priFwSize && nand write $defaultLoadAddr $priKernAddr $filesize
flash_alt_image=tftpboot $defaultLoadAddr $firmwareName && nand erase $altKernAddr $altFwSize && nand write $defaultLoadAddr $altKernAddr $filesize
update_both_images=\
 tftpboot $defaultLoadAddr $firmwareName &&\
 nand erase $priKernAddr $priFwSize &&\
 nand erase $altKernAddr $altFwSize &&\
 nand write $defaultLoadAddr $priKernAddr $filesize &&\
 nand write $defaultLoadAddr $altKernAddr $filesize

nandboot=setenv bootargs console=ttyS0,115200 root=/dev/mtdblock5 ro rootdelay=1 rootfstype=jffs2 earlyprintk $mtdparts;nand read $defaultLoadAddr $priKernAddr $priKernSize; bootm $defaultLoadAddr
altnandboot=setenv bootargs console=ttyS0,115200 root=/dev/mtdblock7 ro rootdelay=1 rootfstype=jffs2 earlyprintk $mtdparts;nand read $defaultLoadAddr $altKernAddr $altKernSize; bootm $defaultLoadAddr

mtdparts=mtdparts=armada-nand:2048K(uboot)ro,256K(u_env),256K(s_env),1m@9m(devinfo),40m@10m(kernel),34m@16m(rootfs),40m@50m(alt_kernel),34m@56m(alt_rootfs),80m@10m(ubifs),-@90m(syscfg)

#############
Environment size: 4327/131068 bytes
Marvell>> env print
boot_order=hd_scr usb_scr mmc_scr hd_img usb_img mmc_img pxe net_img net_scr
bootargs_root=root=/dev/nfs rw
bootcmd=run nandboot
bootcmd_auto=stage_boot $boot_order
bootcmd_fdt=tftpboot 0x2000000 $image_name;tftpboot $fdtaddr $fdtfile;setenv bootargs $console $nandEcc $mtdparts $bootargs_root nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip$bootargs_end $mvNetConfig video=dovefb:lcd0:$lcd0_params clcd.lcd0_enable=$lcd0_enable clcd.lcd_panel=$lcd_panel; bootz 0x2000000 - $fdtaddr;
bootcmd_fdt_boot=tftpboot 0x2000000 $image_name; setenv bootargs $console $nandEcc $mtdparts $bootargs_root nfsroot=$serverip:$rootpath ip=$ipaddr:$serverip$bootargs_end $mvNetConfig video=dovefb:lcd0:$lcd0_params clcd.lcd0_enable=$lcd0_enable clcd.lcd_panel=$lcd_panel; bootz 0x2000000 - $fdtaddr;
bootcmd_fdt_edit=tftpboot $fdtaddr $fdtfile; fdt addr $fdtaddr; setenv bootcmd $bootcmd_fdt_boot
bootcmd_lgcy=tftpboot 0x2000000 $image_name; setenv bootargs $bootargs_dflt; bootm 0x2000000;
bootdelay=3
cacheShare=no
console=console=ttyS0,115200
device_partition=0:1
disaMvPnp=no
eeeEnable=no
enaClockGating=no
enaCpuStream=no
enaFPU=yes
enaMonExt=no
enaWrAllo=no
eth1addr=00:50:43:00:08:01
eth1mtu=1500
eth2addr=00:50:43:00:00:01
eth2mtu=1500
eth3addr=00:50:43:08:00:00
eth3mtu=1500
ethact=egiga0
ethaddr=24:F5:A2:BA:DD:67
ethmtu=1500
ethprime=egiga0
fdt_addr=2040000
fdt_skip_update=no
fdtaddr=0x1000000
fdtfile=armada-38x-modular.dtb
fileaddr=2000000
filesize=1F80100
ide_path=/
image_name=uImage
initrd_name=uInitrd
kernel_addr_r=2080000
lcd0_enable=0
lcd0_params=640x480-16@60
lcd_panel=0
loadaddr=0x02000000
loads_echo=0
mtddevname=uboot
mtddevnum=0
mtdids=nand0=armada-nand
mvNetConfig=mv_net_config=4,(00:50:43:11:11:11,0:1:2:3),mtu=1500
mv_pon_addr=00:50:43:01:00:00
nandEcc=nfcConfig=4bitecc
netbsd_en=no
netmask=255.255.255.0
netretry=no
partition=nand0,0
pcieTune=no
pexMode=RC
pxe_files_load=:default.arm-armadaxp-db:default.arm-armadaxp:default.arm
pxefile_addr_r=3100000
ramdisk_addr_r=2880000
rootpath=/srv/nfs/
sata_delay_reset=0
sata_dma_mode=yes
script_addr_r=3000000
script_name=boot.scr
serverip=192.168.1.254
standalone=fsload 0x2000000 $image_name;setenv bootargs $console $nandEcc $mtdparts root=/dev/mtdblock0 rw ip=$ipaddr:$serverip$bootargs_end; bootm 0x2000000;
stderr=serial
stdin=serial
stdout=serial
usb0Mode=host
usbActive=0
usbType=2
vxworks_en=no
yuk_ethaddr=00:00:00:EE:51:81
#############
make clean
make menuconfig
make kernel_menuconfig
make -j16 -l16 V=s
#############
no idea what openwrt menuconfig maps to netfilter and nftables kernel menuconfig
#############
packages/utils/busybox/Makefile
packages/radvd/Makefile
#############
scripts
 flash_main
 flash_recovery
 blacklist4
 blacklist6
^ needs a script to boot into primary and alternate image ?
^ needs a script to set next boot primary or alternate image ?
#############
wrt1900acs
#############

 uses 2.00mm pitch not 2.54mm

 pair of pliars with a cutter in the middle
 snap the end of the plastic off
 crush the metal till its tight enough to fit

 ^ any plastic fitting 3 ring audio jack to usb would be nice screwed into the case itself

#############

 flipping firmware images ?

 serial:
  run nandboot - /dev/mtdblock5
  run altnandboot - /dev/mtdblock7

 ssh:
  /usr/sbin/fw_setenv boot_part 1 && reboot
  /usr/sbin/fw_setenv boot_part 2 && reboot

 power_switch:
  power off
  power on wait till power LED, as soon as leds turn off power off
  power on wait till power LED, as soon as leds turn off power off
  power on wait till power LED, as soon as leds turn off power off
  power on

#############

eth1 wan
eth0 lan < -
wlan0 < - 2g
wlan1 < - 5g

|------------------------------------------------------|
|sw.port | 0 | 1 | 2 | 3 | 4       | 5   | 6   | vlanid|
|------------------------------------------------------|
|    lan | 4 | 3 | 2 | 1 | -       | -   | eth0| 0     |
|    wan | - | - | - | - | internet| eth1| -   | 0     |
|------------------------------------------------------|

vlan
 1 port_based non-802.1q
 2 vid get/set vlanid
 3 ports vlan port mapping
port
 1 mask port based vlan mask
 2 qmode 802.1q 0=off 1=fallback 2=check 3=secure
 3 pvid primary vlanid
 4 link get port link information

swconfig dev switch0 port 1 set mask
swconfig dev switch0 port 1 set qmode
swconfig dev switch0 port 1 set vid
swconfig dev switch0 port 1 get link
swconfig dev switch0 vlan 1 set port_based 1/0
swconfig dev switch0 vlan 1 set vid
swconfig dev switch0 vlan 1 set ports

#############

/dev/mtd0 uboot
/dev/mtd1 u_env
/dev/mtd2 s_env
/dev/mtd3 devinfo
/dev/mtd4 kernel0
/dev/mtd5 rootfs0
/dev/mtd6 kernel1
/dev/mtd7 rootfs1
/dev/mtd8 syscfg
/dev/mtd9 unused_area

#############

