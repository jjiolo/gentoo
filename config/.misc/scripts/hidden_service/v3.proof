
#############

#
# !!!
# CHECKSUM DOESNT WORK
# !!!
#
# currently doesnt work
# hex - > base32 works
# checksum|ver append is incorrect
#

#############
# checksum == sha256(".onion checksum"|PUBKEY|VERSION).onion
# onion_address = base32(PUBKEY|CHECKSUM|VERSION).onion
#############

pkill tor

[ -d /tmp/hidden_service ] && rm -r /tmp/hidden_service

tor --SOCKSPort 127.0.0.3:9050 --HiddenServiceDir '/tmp/hidden_service' --HiddenServiceVersion '3' --HiddenServicePort '80 127.0.0.1:80' & sleep 1;pkill tor

#############
install -d -o root -g root -m 0755 /tmp/hidden_service && cd /tmp/hidden_service || exit
[ -d authorized_clients ] || exit
[ -f hostname ] || exit
[ -f hs_ed25519_public_key ] || exit
[ -f hs_ed25519_secret_key ] || exit
#############

tail -c32 < hs_ed25519_public_key > public.raw

############# GENERATE CHECKSUM

printf "%s\n" "############# checksum"

printf ".onion checksum" > checksum
cat public.raw >> checksum
printf "\x03" >> checksum

hexdump -C checksum

checksum="$(openssl sha256 checksum|cut -d' ' -f2|head -c2)"

printf "%s\n" "checksum: $(wc -c checksum) ${checksum}"

############# GENERATE BASE32

printf "%s\n" "############# base32"

cat public.raw > hex
printf "${checksum}" >> hex
printf "\x03" >> hex

hex="$(hexdump -ve '1/1 "%02x"'<hex)"

printf "%s\n" "hex: $(wc -c hex) ${#hex} ${hex}"

string=""
for i in $(seq 0 69);do
[ "${hex:${i}:1}" == "0" ] && string="${string}0000"
[ "${hex:${i}:1}" == "1" ] && string="${string}0001"
[ "${hex:${i}:1}" == "2" ] && string="${string}0010"
[ "${hex:${i}:1}" == "3" ] && string="${string}0011"
[ "${hex:${i}:1}" == "4" ] && string="${string}0100"
[ "${hex:${i}:1}" == "5" ] && string="${string}0101"
[ "${hex:${i}:1}" == "6" ] && string="${string}0110"
[ "${hex:${i}:1}" == "7" ] && string="${string}0111"
[ "${hex:${i}:1}" == "8" ] && string="${string}1000"
[ "${hex:${i}:1}" == "9" ] && string="${string}1001"
[ "${hex:${i}:1}" == "a" ] && string="${string}1010"
[ "${hex:${i}:1}" == "b" ] && string="${string}1011"
[ "${hex:${i}:1}" == "c" ] && string="${string}1100"
[ "${hex:${i}:1}" == "d" ] && string="${string}1101"
[ "${hex:${i}:1}" == "e" ] && string="${string}1110"
[ "${hex:${i}:1}" == "f" ] && string="${string}1111"
done

printf "%s\n" "string: ${#string} ${string}"

url=""
base="abcdefghijklmnopqrstuvwxyz234567"

for i in $(seq 0 55);do tmp="${string:$((${i}*5)):5}"

 total=0

 for o in 0 1 2 3 4;do bit="${tmp:${o}:1}"

 [ "${bit}" == "0" ] && continue

 [ "${o}" == "0" ] && total="$((${total}+16))"
 [ "${o}" == "1" ] && total="$((${total}+8))"
 [ "${o}" == "2" ] && total="$((${total}+4))"
 [ "${o}" == "3" ] && total="$((${total}+2))"
 [ "${o}" == "4" ] && total="$((${total}+1))"

 done

url="${url}${base:${total}:1}"
done

echo ${#url}
printf "%s\n" "guess: ${url}.onion"
printf "%s\n" "real:  $(cat hostname)"
printf "%s\n" "${url}.onion" > hostname.test

#############

