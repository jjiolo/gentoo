#!/bin/sh
#############
download(){

#############
[ -d "${downloads}" ] || die "download directory does not exist"
[ -d "${keyring}"   ] || die "keyring directory does not exist"
#############
# atomic control of source/signature/public in the download directory
#############

############# download

 [ "${link_package}" == ""   ] || [ -f "${downloads}/${source}"    ] || curl --progress-bar -o "${downloads}/${source}"    "${link_source}"
 [ "${link_signature}" == "" ] || [ -f "${downloads}/${signature}" ] || curl --progress-bar -o "${downloads}/${signature}" "${link_signature}"
 [ "${link_public}" == ""    ] || [ -f "${downloads}/${public}"    ] || curl --progress-bar -o "${downloads}/${public}"    "${link_public}"

 [ "${link_package}" == ""   ] || [ -f "${downloads}/${source}"    ] && debug="${debug}[${g}${source}${m}]\n"    || debug="${debug}[${r}${source}${m}]\n"
 [ "${link_signature}" == "" ] || [ -f "${downloads}/${signature}" ] && debug="${debug}[${g}${signature}${m}]\n" || debug="${debug}[${r}${signature}${m}]\n"
 [ "${link_public}" == ""    ] || [ -f "${downloads}/${public}"    ] && debug="${debug}[${g}${public}${m}]\n"    || debug="${debug}[${r}${signature}${m}]\n"

 [ "${link_package}" == ""   ] || [ -f "${downloads}/${source}"    ] || die
 [ "${link_signature}" == "" ] || [ -f "${downloads}/${signature}" ] || die
 [ "${link_public}" == ""    ] || [ -f "${downloads}/${public}"    ] || die

############# verify

 if [ "${link_signature}" != "" ];then

  gpg --import "${downloads}/${signature}"
  gpg --trust-model always --verify "${downloads}/${signature}" &>/dev/null && debug="${debug}[${g}verify${m}]\n" || debug="${debug}[${r}verify${m}]\n"
  gpg --trust-model always --verify "${downloads}/${signature}" &>/dev/null || die

 fi

############# debug

 printf "${debug}"

}

