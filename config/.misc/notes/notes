
#############
fc00::feed:beef/64
#############
[0|129|153|165|189|195|219|231|255]
#############
no idea what stupid has gathered itself in here
stuff at the bottom tends to get rewritten and kept
stuff at the top is unordered raw sewage
#############
|-----------------|
| [REBUILD]       |
|-----------------|
| [INFORMATIONAL] |
| [TODO]          |
| [PROBLEMS]      |
|-----------------|
| [CURRENT]       |
|-----------------|
| [OLD]           |
|-----------------|
| [REFERENCE]     |
|-----------------|
#############

[REBUILD]
#############
-------------
 lastest - 2023:10:02 22:57:00
-------------
 * linux-6.1 - kernels/.z.server (6.2 broke CONFIG_DRM_AST)
 ^ X0-log - ShadowFB: preferred NO, enabled NO (something about no/modesetting)
 * app-alternatives - FEATURES='-collision-protect' (remove after its in stage3)
-------------
 * trim binhost/distfiles - (binhost upto 6GB) (vfat 4GB limit)
    mv binhost/distfiles ../shared/distfiles
    config/portage/make.conf - GENTOO_MIRRORS=http://127.0.0.1/shared"
-------------
#############

[INFORMATIONAL]:
#############
* gcc - removed /etc/portage symlink ?
* qemu reboot - corrects vnc output size
* mandoc: sys-boot/efibootmgr - > sys-libs/efi-var - > mandoc ./file.1 | less -S
* pkg_postinst isnt recorded in CONTENTS
* busybox/ip - no nexthop, no multicast, no netns
* /bin/login sets USER HOME ; /bin/ash /init /sbin/init have no USER HOME
* dropbear socks || wg/microsocks nc -lks local:/path -e dbclient user@host nc local:/path
* keepalive points - monitor,crond,udhcpc_script,udhcpd_script  ntpd ?
* for i in $(seq 0 64) ; do trap false $i ; done ; exec command </dev/null &>/dev/null
* gcc -lto -pgo 00:18:31 +00:00:00 || gcc +lto -pgo 00:24:44 +00:06:00 || gcc +lto +pgo 00:36:48 +00:12:00
* sysctl -w kernel.yama.ptrace_scope=3 CONFIG_SECURITY CONFIG_SECURITY_YAMA
* file(mv *match* ffs) directory(mv *match*/* /tmp/why; rmdir *match*;)
* opening httpd pages is bad mode (no sanitization)
* raw pasting into st/vim is bad mode...
#############

[TODO]
#############
* vim - :h vimrc-intro || :h option-list
* privdrop stage3 initial pull, stage3 portage update, stage3 fetch
* dnssec verified cache (optionally over tor) (dnscrypt-proxy wins)
* alsa environment variable as default soundcard ?
#############

[PROBLEMS]:
#############
* {binutils,gcc}-config doesnt flip on updates
* ebuild scheduled for merge, causes rebuilds (doesnt install into /binhost/rootfs?)
* Xephyr, -auth fails silently and allows global access to :display
* inability to add wifi interfaces to bridges (breaks ability to dedupe commands)
* monitor diskio reads every drive then every block device doubling the values ? (sda && md127)
* sysctl -w net.ipv4.ip_unprivileged_port_start={0,32768} vs inbound skuid (breaks conntrack)
* icmp doesnt ct state, forces invalid traffic
* multicast and broadcast, force invalid traffic < - should be related ?
* openssl dtls doesnt support ed25519
* openssl pkeyutl doesnt support ed25519
* qemu < - libusb stopped working completly ?
* qemu < - tigervnc has sticky keys with xorg-server open...
* dwm, holding down alt+i increments the number indefinintly ? (requires multiple alt+d to recover)
#############

[CURRENT]
#############

 [tracking changes]

 sh .diff - prints diff for every directory (using /etc/config.tar.gz)

 proof read or gtfo,
 to much half arsed shit compounding over time
 proof reads are harder than doing partial updates properly

 -------------

 [updating]

 full scope it once,
 diff last known against newest
 ./sysctl -a > sysctl.sh
 ./configure --help > configure.sh
 ./binary --help > binary.sh
 ./{man,doc}
 1 hour upfront , 5 minutes each bump

 -------------

 [reduce]

  ./z.package <package>
  ./z.contents <package>
  ./z.library <libpackage>
 * contents pull library names
 * check the package is in DEPENDS
 * check the library is used in REQUIRES
 * dependencies that dont link to anything eg x11-misc/compose-tables

 * /binhost/rootfs/{bin,sbin,usr/bin,usr/sbin}/* --help > old/<command>.help
 * /binhost/rootfs/{bin,sbin,usr/bin,usr/sbin}/* --help > new/<command>.help
 ^ quickest way to list any binary changes from updates ?

 -------------

#############

^ attempt to record a list of things actually done
v attempt to create lists of things to actually do

#############
setpriv_udhcpd < - ignores first sleep ? wtf would be an understatement
#############

 [ more harder ]

  * /proc hardening ? meminfo+stat required for xorg ?
  * /sys hardening ? block/bus/class/firmware/kernel/module
  * removed access to all /proc /sys files ?

#############

 [repos/xorg]
-------------
  [libmd]
   archive.hadrons.org/software/libmd/${P}.tar.xz
  ^ no alternative

  [libbsd] *
   libbsd.freedesktop.org/releases/${P}.tar.xz
   gitlab.freedesktop.org/libbsd/libbsd
  ^ both have current version
-------------
  [libudev-zero]
   github.com/illiliti/libudev-zero
   codeberg.org/illiliti/libudev-zero
  ^ hasnt moved yet
-------------
  [sys-libs/zlib]
   zlib.net/${P}.tar.gz
-------------
  [x11-base/xcb-proto]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/proto/${P}.tar.xz
   gitlab.freedesktop.org/xorg/proto/xcbproto

  [x11-base/xorg-proto]
   www.x.org/releases/individual/proto/xorgproto-2023.2.tar.xz
   gitlab.freedesktop.org/xorg/proto/xcbproto

  [x11-base/xorg-server]
   www.x.org/releases/individual/xserver/${P}.tar.xz
   gitlab.freedesktop.org/xorg/xserver
-------------
  [x11-libs/libXau]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libXau/

  [x11-libs/libXdmcp]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libXdmcp

  [x11-libs/libXfont2]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxfont

  [x11-libs/libdrm]
   dri.freedesktop.org/libdrm/${P}.tar.xz
   gitlab.freedesktop.org/mesa/drm

  [x11-libs/libfontenc]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libfontenc

  [x11-libs/libpciaccess]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libpciaccess

  [x11-libs/libxcb]
   www.xcb.freedesktop.org/dist/${P}.tar.xz
   x.org/releases/individual/xcb/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb

  [x11-libs/libxcvt]
   www.xorg/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcvt

  [x11-libs/pixman]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcvt

  [x11-libs/pixman]
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/pixman/pixman

  [x11-libs/xcb-util]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb-util

  [x11-libs/xcb-util-image]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb-util-image

  [x11-libs/xcb-util-keysyms]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb-util-keysyms

  [x11-libs/xcb-util-renderutil]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb-util-renderutil

  [x11-libs/xcb-util-wm]
   xcb.freedesktop.org/dist/${P}.tar.xz
   www.x.org/releases/individual/lib/${P}.tar.xz
   gitlab.freedesktop.org/xorg/lib/libxcb-util-wm

-------------
* few that have xorg and gitlab links ?
^ pick which ever one makes checking for updates easier ?
* libXfont2 RDEPEND=libmd/libbsd < apparently doesnt need them
#############
install - chown no longer resets suid/guid...
? chown should remove suid/guid because its no longer safe
#############
git+curl --enable-bearer-auth or push is broken ? boo
#############
+enable-dgram
+enable-psk
+enable-dtls
+enable-dtls1_2
+enable-dtls1_2-method
-------------
openssl s_server -nocert -dtls -psk $(echo test|hexdump '1/1 "%02x"') -accept 127.0.0.1:4444
openssl s_client -dtls -psk $(echo test|hexdump '1/1 "%02x"') -connect 127.0.0.1:4444
-------------
while sleep .1 ; do openssl s_client -dtls -psk 746573740a -bind 127.0.0.1:3333 -connect 127.0.0.1:4444 ; done
while sleep .1 ; do openssl s_client -dtls -psk 746573740a -bind 127.0.0.1:4444 -connect 127.0.0.1:3333 ; done
-------------
^ CONNECT unexpected message...
^ one needs to open a client backend piped through netcat...
^ one needs to open a server backend piped through netcat...
-------------
nc -u -s 127.0.0.1 -p 4444 127.0.0.1 3333
nc -u -s 127.0.0.1 -p 3333 127.0.0.1 4444
-------------
forced to netcat -udp dtls is irrelivent ? (tcp over udp)
#############

firefox - 

 fucked it forgot to do firefox.domains ?
 policies.json AppUpdateURL (removes all http:// refernces)

 update prompt -
  DisableAppUpdate - false*
  ManualAppUpdateOnly - false*

 password manager
  DisableMasterPasswordCreation - effectively a password manager
  OfferToSaveLogins - part of password manager
  OfferToSaveLoginsDefault - part of password manager
  PasswordManagerEnabled - actual password manager
  PrimaryPassword -

#############
/etc/self/z.testing - no promises (everything else should be proof read and tested)
#############
 gcc hardening
  -fvtable-verify -
  -ftrapv - trap signed overflow
  -mcet -fcf-protection - control flow protection
  -fexceptions - harden multi threaded c/c++ code thread cancellation handlers use unprotected function pointer on the stack
  -Wl,-z,defs - detect and reject underlinking
#############

 [gnupg]

  removed encryption uid
  removed signature uid
  removed embedded filename

 ^ defaulted to no keyservers
   removing all metadata to match (in theory?)

#############
* every script refers to kernels by name ?
* sysctl.conf is horrible to maintain / verify
#############
ulimits -a for individual pids/users ?
printf "Max processes=3:3" >> /proc/1234/limits
printf "Max nice priority=20:40" >> /proc/1234/limits
^ correct format, doesnt edit the values ?
prlimit - util-linux (busybox missing alot of functionality)
#############
bootfs discard ? storage doesnt discard ? cant remember why
#############
 xorg/x11-base/xcb-proto
 ^ broke ? gentoos pulling gitlab link
   main website hasnt updated nearly a month...
 ^^ alot of gitlab or gtfo coming ?
#############
 shared/contacts/self/
 known.{user,nobody,jail
 authorized.{user,nobody
 ^ groups them in the directory so it looks less shit
 * only gnupg,public,private,wireguard ?
#############

 PS1 colors for ssh and stage3 chroot are horrible...
 ^ add a word or [r] remote ? to the line
   and only use bright white for chroot ?

 [user][host][path][depth][-] host
 [user][host][path][depth][c] chroot
 [user][host][path][depth][r] remote
 ^ still doesnt allow color
   and still lose SSH_CONNECTION when chrooting ?

 tl;dr cant identify remote chroot...
 ^ turns out thats really annoying

#############

 xephyr escapes

  x.user - exec sudo -l
  alt+m monocle mode
  x.nobody 
  alt+shift 3

  ^ leaves enter pinned inside Xephyr

  ^^ fairly sure theres another one ?
  move focus to different monitor
  opens terminal closes terminal
  leaves focus in old window not current monitor ?

#############

 openssl-3.2.0 alpha

 test dtls ed25519

 kdf support for argon2d argon2i argon2id (drop argon2)

 openssl s_client -ktls support
 openssl s_client -adv - type {help} ?
 openssl s_client -quic (-adv -alpn)
 no-http option (disable -www -http ?)

 x509 ca req produce x.509 v3 certificates ?
 ^ keyUsage - codeSigning

 aes-gcm-siv - gcm with nonce reuse protection

#############

 tl;dr

  mutt + opensmtpd + dnscrypt-proxy + tinydns

  updated ebuilds and config files

  really quick throw up dns and mail server

#############
nftables - lo lan/nat/tun log
^ nat and tun dont really make sense ?
#############

 grub hardcodes 172.16.0.1 (siaddr)
 grub hardcodes downloads/bootfs/<kernel>
 grub hardcodes downloads/bootfs/<image>
 ^ should be pulling dhcp variables ?

 go-bootstrap FEATURES="mirror"
 ^ takes to fucking long

#############

 * chunk up repos...
   overflow
   overlay
   xorg
   testing
  ^ makes it feel less horrific when proof reading

 * ability to update usr/share/tor/geoip...

#############
 * repos/xorg - runtime deps work, build time deps fluked
#############
 firefox-esr < - libstdc++ libgcc_s + glibc:libmount
#############

 /etc/sysctl.conf < - adding arp/ndp settings

sysctl - ipv4 options tidy ?
         ipv6 options tidy ?
       ^ arp and ndp

 sysctl -a | grep arp
 accept
 announce
 evict_nocarrier
 filter
 ignore
 notify

#############

qemu usb pass through test (pipewire broke it?)
dropbear cheat sheet
 dbclient -J proxy_command
  server - nc -e dbclient
  server - dbclient -J nc
  client - nc -e dbclient
  client - dbclient -J nc
  ^ forward or reverse connections...
  * dbclient nc might stop closing listening socket ?

#############
mpv/ffmpeg updated (slow now :'()
#############

 * 0.binhost - uses stage3 variables ?
 * backup - uses stage3 variables ?
 ^ should install / setup on any liveusb ?

 * meson - -Db_lundef
           -Db_ndebug
     ^ refuse to build libraries with undeclared dependencies ?
     ^ refuse to use assert ?

 * transmission-daemon --dump-settings
 ^ missing "peer-id-ttl-hours": 6,

 * ip addr scope {host,link,global}
 ^ private address as global wrong scope ?
 * ip route scope {host,link,global}
 ^ private address as link correct scope ?
 ^^ suppose to set it manually ?

 * added ip_route_multipath
   setpriv_network_{default,oneshot,ping,zcip}
           network_{default,oneshot,ping,zcip}
 ^ rather than screw up primary dns with multiple dhcp servers
   forcing it to delete a route
 ? leave support to oneshot and add multiple defaults ?
 ^ no functionality hint (cant test it shouldnt support it)
 ^^^ using network_oneshot protect network_default

#############

 2.shell - setsid chroot . /bin/busybox
 ^ ability to remove pts injection ?

 * su -l -s /bin/sh -c 'setsid' <user>
 * login shell executes rc/profile with insecure pts...
 * setsid su -l -s /bin/sh -c 'setsid' <user>

#############

* tor - 0.4.8.1 alpha

* read -r --raw < - interpret backslashes literally, rather than as escape characters
^ need a test script to demonstrate the difference

* p2pd/p2p - split downloads/uploads
             p2pd write on downloads / read on uploads
             p2p read on downloads / write on uploads

* console has the wrong key layout
  host has mtm-256color
  chroot does not have mtm-256color
  ^^ cant do dev from tmux(dtach+mtm)
  (exec showkey > /run/logs/keylogger &)&
  dumpkmap - get keyboard map
  loadkmap - set keyboard map

* gnupg - scdaemon tpm2daemon config files ?

* mpv.{downloads,films,music,series}
 ^ dtach -A socket mpv.music 127.0.0.1
   dtach -A socket mpv.music /tmp/storage/shared/archive/music
   empty input default to local ?

* busybox - gzip content encoding, if file / file.gz exists
            gzip -c -9 index > index.gz ; curl -I --compressed 127.0.0.1

* firefox - still network activity on browser open...

 * /init /etc/inittab /etc/init /etc/profile - debug output ?
 
 * tftpd -l cant write log files ?
 
 * qemu usb pass through no longer works ?

 * v.client v.server - save .vpn/config nothing to actually use it ? v.{server,client,flush,restore?}

 * dtach cant recreate socket ? SIGHUP ignored SIGUSR1 terminates running process
 * identify dtach from PS1 - shlvl ?
 * identify mtm from PS1 - $MTM

 * mutt smtp only exposes ip in headers ?
 * mutt sending From $USER $(date) ?
 ^ no user / username / uid value in muttrc ?

 * grub ebuild ? finishes off udhcpd/tftpd/grub kernel/initramfs/nfsd

 * herbe needs /dev/shm/$USER splitting (doesnt support multiplayer) (logread|grep -f file|while read ; do herbe "notifcation" ; done
 ^ desktop:desktop /dev/shm/desktop.tmp < - herbe as a single user

* denial of service / stability

   tmp space/inode exhaustion bricks running system ?
   top level directory root write only
   dhcpd:dhcpd - overwrite /run/leases till full
   dhcpc:dhcpc - overwrite /run/udhcpc till full
   desktop:desktop - overwrite /tmp/.X0-{auth,lock,log,log.old} till full
   /run/services - ddns dnsd p2pd full directory write inode+space exhaustion
                     
   z.ephemeral ? user,nobody,proxy,desktop,ddns,dnsd,p2pd
   full denial of service from every possible rce point

* tmpfs doesnt support diskquota
  ramfs+ext4 ?

* config/portage/profile/packages
 virtual/man doesnt depclean anything ?
 sys-apps/man-pages removes an extra 50 packages ?
 man-db or man-pages < - depends on systemd-tmpfiles ?

^ weird dependency chain

! basically -virtual/man should depclean everything...
  couldnt figure out why ?

#############

[services]
-------------

   root - console only
   user - stage3 + dbclient/dnsd/ddns
 nobody - single user mode no proxy + audio/video
  proxy - single user mode proxy only
   jail - no internet + persistent sandbox + audio/video

 nobody - 22,465,995,443,6697,18081,18089
    ssh - 22
   smtp - 465,995
   http - 443
    irc - 6697
    xmr - 18081,18089

-------------
* self contained virtual machine usb mic/webcam passthrough
-------------

 xinit
  X
  monitor

 dwm-host
  st

 Xephyr
  dwm-guest

-------------
/etc/services/
 crond
 ddns
 dnsd
 httpd
 p2pd
 sets
-------------
 ssh   - user,nobody,ssh
 smtp  - nobody,smtp
 http  - root,user,nobody,http
 p2p   - root,user,nobody
 irc   - nobody,irc
 xmr   - nobody,xmr
 qemu  - user,nobody,qemu
 media - nobody,jail
-------------
 a.chroot b.init (c.keys)
 c.server d.client
 e.setpriv
 f.sets
 z.testing
-------------
/etc/self/c.server
 gnupg g.{setup,conf,agent}
 dropbear s.{flush,client,server}
 wireguard v.{flush,client,server}
 wifi w.{scan,public,private,connect,auth}
 xephyr {x.nobody,x.proxy,x.jail}
 xephyr {p.ssh,p.smtp,p.http,p.irc,p.xmr}
-------------
per application file access
per application firewall access
all system binaries vs chroot ?
-------------
while sleep 3 ; do DISPLAY=:0 XAUTHORITY=/tmp/.X0-auth xrandr --auto ; done
-------------
lsw && xev -
 id="$(lsw|awk '/Xephyr.*:13/{print$1}')" ;
 xev -display :0 -id "${id}" -1 -event structure | 
 while read ; do DISPLAY=:13 XAUTHORITY=/tmp/.X13-auth xrandr ; done
-------------
^ polling Xephyr auto resize vs Xephyr triggering resize on events ?
-------------
#############

storage.bootfs -
$storage/{.gnupg,.ssh,.vpn,.wifi}
$services/ddns/{public,private}
$home/{user,nobody,proxy,jail,ssh,smtp,http,irc,xmr}/.ssh
$home/ssh/.ssh
$home/smtp/mail
$home/http/.browser
$home/irc/irc
$home/xmr/monero

 usb.persistence -
  storage.shared < - takes gnupg/public/private/sshd/user/nobody/proxy/vpn
  usb.get - get values saved in bootfs
  usb.put - put values into bootfs

 efi.persistence -
  storage.shared < - code duplication
  efi.get - get values saved in efi
  efi.put - put values into efi

^ would need encrypted usb...

-------------

 init: mount bootfs

  # install bootfs to host

  install -d $shared/downloads/bootfs
  cp bootx64.efi/client/{laptop,desktop,server,virtual}

  # install bootfs keys to host

  install -d $shared/contacts/$hostname
  cp gnupg/ssh/vpn/wifi ddns irc/mail/monero

  # install host keys to bootfs

  install -d $bootfs/contacts/$hostname
  cp gnupg/ssh/vpn/wifi ddns irc/mail/monero

-------------

#############

[automate] - didnt work out ?

 endgame was automating new portage/sets entries

 package has libs installed that arent used gets flagged?
 package has binaries installed that arent used does not get flagged?

 eg x11-misc/compose-tables - no binaries or libraries

-------------

 emerge --root /run/console --nodeps @console
 emerge --root /run/desktop --nodeps @desktop

 ldd + db/pkg/category/package

 find $PATH $LIB -type f -exec sh /usr/bin/ldd {} 2>/dev/null \; # installed

 find /var/db/pkg -type f -name REQUIRES -exec cat {} \; | tr ' ' '\n' | sort -u # required

 diff installed required
  + required not installed ?
  - installed not required ?

 diff required installed
  + installed not required ?
  - required not installed ?

 diff installed required | grep '^+' > needed
 diff installed required | grep '^-' > not_needed

 * insert magic to remove -/+ from the file or ${i:1} triggers { } matching in find

 for i in $(cat not_needed) ; do find /run/desktop/var/db/pkg -type f -name CONTENTS -exec grep -Hi $i {} \; ; done

 * doesnt fix things like x11-misc/composetables ?
 ^ package with only config files in it...

-------------

* automate creating sets/<binary>
* automate reducing packages in sets/<binary>

* emerge --root /run/<binary> -avbk <binary>

 needs to split DEPEND and REQUIRES ?

 DEPEND can overshoot needed packages
 REQUIRES packages needed to link at run time ?

-------------

#############

 localhost interface...
  ip link down lo # doesnt flush route
  ip route add lo # doesnt require the interface to be up
  ip link up lo   # automatically creates addresses (while ignoring route)
  ip addr add lo  # doesnt automatically create routes

 eth interface...
  ip link down eth0 # does flush route
  ip route add eth0 # does require the interface to be up
  ip link up eth0   # doesnt create addresses
  ip addr add eth0  # does automatically create routes

#############

 [opensmtpd] - dns server with mx records

-------------

 [djbdns]

 [ dnscache - /etc/dnsroots.global ]

  dnscache-conf acct logacct /run/dnscache 127.0.0.1
  IP=127.0.0.1 IPSEND=127.0.0.1 ROOT=/run/dnscache/root UID=dnsd GID=dnsd dnscache

  /run/dnscache/root/

   ip/127.0.0.1 - allow queries from 127.0.0.1
         ip/127 - allow queries from 127.0.0.0/8
      ip/172.16 - allow queries from 172.16.0.0./16

       server/@ - contains /etc/dnsroots.global
       server/@ - FORWARDONLY treats addresses as any upstream recursive cache
   server/local - forward all requests for local to the ip address contained in the file

 [ tinydns ]

  tinydns-conf dnsd dnsd /run/tinydns 127.0.0.2
  IP=127.0.0.2 ROOT=/run/tinydns UID=nobody GID=nobody tinydns

  tinydns-data - turn ./data into ./data.cbd
  tinydns-edit - data data.new add {alias,childns,host,mx,ns} hostname address
   tinydns-get - query the local data file...

  /run/tinydns/root
   . ./add-ns      - ./tinydns-edit data data.new add ns local 127.0.0.1
   . ./add-ns      - ./tinydns-edit data data.new add ns 127.in-arpa.arpa 1.0.0.127
   = ./add-host    - ./tinydns-edit data data.new add host first.local 127.0.0.1
   + ./add-alias   - ./tinydns-edit data data.new add alias second.local 127.0.0.1
   @ ./add-mx      - ./tinydns-edit data data.new add mx mail.local 127.0.0.1
   & ./add-childns - ./tinydns-edit data data.new add childns child.local 127.0.0.1

^ really really simplistic
  very little overhead to setup/audit/maintain
  old incomplete patching and not a lot of love

-------------

 * does technically work for testing ? and theres really not alot to it

-------------

#############

[crypto]

tpm2-tools
---
argon2 - cli hashing sha256 length by default
---
google-authenticator
---
gnupg(tpm2) / mutt
ddns
wireguard
dropbear
irc sasl key
xmr
---

ftpm + sme sev

gpg --edit-key user@email.com - > keytotpm

^ full crypto set

-------------
(openssl enc) vs (gpg --symmetric) vs (cryptsetup open)
-------------
[sha512] [512 bits] [128 hex] [64 char]
[sha256] [256 bits] [64  hex] [32 char]
[sha1]   [40  bits] [20  hex] [20 char]
-------------
gnupg - refuses to change s2k for private key encryption
gpg --symmetric <file> --s2k-mode 3 --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-count 65011712
ssl private key encryption also has lack luster kdf
-------------
cryptsetup - luks only -pbkdf={argon2i,argon2id,pbkdf2} -iter-time=1000000 -pbkdf-memory=kilobytes -pbkdf-parallel=threads -pbkdf-force-itterations=LONG
-------------
nettle-pbkdf2
-------------

cryptsetup still uses 256 bit keys so...
argon2 default output matches key input length

#############



[OLD]
#############

 [pxe]

  grub/linux/initrd
  grub/linux/rootfs
  grub/linux/nfsroot

 * net-fs/nfs-utils
   net-libs/libtirpc
   sys-apps/keyutils

 ^ sys-boot/grub - error memdisk, drops into recovery shell ?

  * firmware checksum grub with embedded public key ?

    grub-mkstandalone -k --pubkey
    boot/internal/path=/tmp/external/path

#############

 tor - 
 'libevent error operation not permitted while writing response to port'
  creates dropped udp spt=53 dpt=51898
  60 second conntrack timeout
  dns isnt up, tor allows longer to fail, linux cleans conntrack entries

#############

 -------------
 firefox-bin - > firefox-esr
 -------------
 google search parameters
 https://google.com/ncr - set no country redirect cookie
 https://google.com/preferences - force regional results
 https://www.google.com?cr=countryXX
 https://www.google.com/search?cr=countryXX&q=%s
 manually setting ?cr=countryXX persists across all interaction
 /usr/lib64/firefox/distribution/policies.json - "searchengine": { },
 -------------
 * no country redirect doesnt allow
   searching for busybox everywhere
   shows only a handful of things from somewhere
   instead of everything from everywhere
   massively debilitating
 -------------
 * 50x the number of requests
   50x search?key=value parameters
   combining first page of search results
 ^ was suppose to be an easy fix, now total shit
 -------------

#############

[ca-certificates]

 mozilla provides certdata.txt...

 https://blog.mozilla.org/security/2021/05/10/beware-of-applications-misusing-root-stores
 - > https://hd.mozilla.org/releases/mozilla-beta/raw-file/tip/security/nss/lib/ckfw/builtins/certdata.txt
 - > https://github.com/crtsh/root_programs/tree/master/mozilla_certdata (replaced https://github.com/agl/extract-nss-root-certs)
 - > 

 https://www.ccadb.org # mozilla runs common certificate authority database 
 - > https://ccadb-public.secure.force.com/mozilla/includedRootsPEMTxt?TrustBitsIncluded=Websites
 ^ link to root authorities allowed to sign websites ( no code signing, no smime signing )
   comes as a single ca-certificates.crt file

-------------

* end goal cert as hash name only, not symlink to random file name (far more complicated than the quick 4 line script)

-------------

 # scripts to install and set it up

  install -d -o ${USER} -m 0700 certs && cd certs || exit 1

  curl -o ca-certificates.crt https://ccadb-public.secure.force.com/mozilla/IncludedRootsPEMTxt?TrustBitsInclude=Websites

  awk 'BEGIN {c=0;} /BEGIN CERT/ {c++} { print > "cert." c ".crt" }' < ca-certificates.crt

  openssl rehash -v .

-------------

 # scripts to prove its the same as what already exists

  find .                                   -type f -exec openssl x509 -noout -subject -in {} \; | sort -u > new.sort
  find /usr/shared/ca-certificates/mozilla -type f -exec openssl x509 -noout -subject -in {} \; | sort -u > old.sort

  openssl sha1 old.sort new.sort ; diff old.sort new.sort

  install -d -o "${USER}" -m 0700 check && cd check || exit 1

  awk 'BEGIN {c=0;} /BEGIN CERT/{c++} { print > "cert." c ".crt" }' < /etc/ssl/certs/ca-certificates.crt

  find . -type f -exec openssl x509 -noout -subject -in {} \; | sort -u > new.sort

  diff new.sort ../certs/new.sort

-------------

#############

[networking]

 lan - strict filtering assumes network is hostile
 nat - loose  filtering assumes network required authentication or physical presence (vm/eth/wifi)
 tun - loose  filtering assumes network required authentication (local/remote)

 interfaces get added to lan or nat bridges
 eth defaults to nat
 wlan defaults to lan
 wifi cant connect to lan/nat bridge
 wifi forwards to lans firewall chain
 forces wireguard over wifi (shared passphrase isnt safe for tofu) (radius is harder to setup)
 
 lan/nat/tun
 only remote facing service is wireguard
 lan/nat use tun as dmz bridge
 remote can login to tun
 local can login to tun
 allowing controlled exposure of the dmz network

 forwarding rules only allow tcp out of nat
 forwarding rules only allow terminating into wireguard

#############

[multicast/broadcast]

[avahi]
/etc/{passwd,group,shadow} mdns: ddns: dnsd:
/etc/nsswitch.conf
/etc/nftables/port/5353

avahid + fingerprint addressing...
^ generate .gnupg .ssh .vpn .wifi
  
nmap + ncat
igmp in nftables
new,established on icmp/224.0.0.0/4
flow control
cli subscribe to multicast group
^ probably means redumping nftables

^ end game is not writing an ircd server
  and having a cheap throw up irc client
  on multicast

#############

[herbe]
-------------

( mpv /usr/share/sound/alsa/notifiaction.wav & )
( herbe 'PING!' 'i can haz notifications?' 'yes please' && echo right click || echo left click & )

* full screen xephyr notifications are huge
* half screen xephyr notifications are tiny

* creates /dev/shm/sem.herbe as running user...
  prevents {desktop,user,nobody,proxy} executing after first run
^ probably requires patching ? but its 200 locs
  not even i would be capable of fucking that up ?

#############

[slock]
-------------
update /etc/inittab only - tty1::once:/bin/login -f root
chown desktop:desktop /sbin/slock ; chmod 4750 /sbin/slock
exec startx <password> (mount -o remount,rw,size=50% / ; passwd desktop $1 ; system.lock )
slock
^ hangs shit password lock on network access
^ hangs shit password lock on all dac sandbox environments
^ limits shit password to a network blocked account
? works in theory doesnt beat acpid poweroff on lidclose
-------------

#############

inotifywait \
--monitor \
--recursive \
--no-dereference \
--quiet \
--event \
/tmp/storage
-------------
inotifywait -mrPq                                                 /tmp/storage
inotifywait -mrPq -e create -e modify -e attrib -e move -e delete /tmp/storage
-------------
xorg ticks print .Xauthority out every second
firefox creates an ungodly ammount of spam
transmission is utterly dumb

#############
tl;dr - isolated vlans arent isolated when the node you connect to them executes javascript
#############

#############
gcc 11.1.0 man (lto/pgo/cfi/sanitizers)
-------------
-fsanitize
-------------
qemu     - asan&&ubsan (both)
tor      - asan&&ubsan (both)
busybox  - asan&&ubsan (had to disable both apparently full of memory leaks)
openssl  - asan&&ubsan (had to disable asan)
tigervnc - asan||tsan  (asan only)
kernel - CONFIG_KASAN
kernel - CONFIG_KCSAN
-------------
library only requires LD_PRELOAD=/usr/lib64/libasan.so ?
-------------
openssl asan breaks xorg-server... (memleaks calling xauth)
-------------
libasan.so
liblsan.so
libtsan.so
libubsan.so
#############

#############
|--------------------------------------------|
|roaming - { tun && lan/wlan } { nat }       |
|   host - { tun && lan/wlan } { nat && tun }|
| nested -        { lan/wlan } { nat && tun }|
|--------------------------------------------|
| lo / lan / nat / tun / wlan0               |
|--------------------------------------------|
| input -                                    |
|  icmp                                      |
|  client established                        |
|  server established                        |
|  server new                                |
|  invalid                                   |
|  dropped                                   |
|--------------------------------------------|
| output -                                   |
|  icmp                                      |
|  server established                        |
|  client established                        |
|  client new                                |
|  invalid                                   |
|  dropped                                   |
|--------------------------------------------|
| forwarding -                               |
|  nat      - > lan,wlan - new,established   |
|  lan,wlan - > nat      - established       |
|  tun      - > tun      - new,established   |
|--------------------------------------------|
#############

netflow + dataflow

outbound connections - flag all connections sending more data than recieved ? (implies upload)
 inbound connections - flag all connections recieved less data then sending ? (implies upload)

* reverse shell logging small recieve to large reply
^ averaging upload to see if database dumps trigger shifts in normal over time

read keepalive rpackets rbytes spackets sbytes << EOF
$(grep 9050 /proc/net/nf_conntrack|awk '{printf$5" "$11" "$12" "$17" "$18}')
EOF
ratio="$((${rbytes##*=}/(${sbytes##*=}/100))"

#############

*** removing persistence mki ***

finite scope for checking boot and persistence...
busybox /bin/sh calls ~/.terminfo ~/.profile only
/etc/profile deletes them before they get a chance to run
then static binary to attest the rest of the system

gets stupid really quickly - (~/.vim) (~/.browser) (~/.mpv) (~/.links) (~/.gnupg)

scope locking clean boot to static busybox sh with no risk of persistent hooks... hopefully

^ should allow observing the filesystem safely before accidently enabling persistence
  (relience on none human error, ie not being dumb enough to forget checking)

* calls $HOME/. regardless of /etc/passwd entry (deletes whatever $HOME/. is regardless of /etc/passwd)...

* ${storage}/.init single point of contact for persistence (no weird conditional hooks in init scripts)

*** removing persistence mki ***

#############

#############

* hides the list of things expecting you to remember a secret
  every bios/uefi password
  every hdd/ssd/nvme cryptsetup password
  every gnupg password
  every dropbear password
  every vpn password
  every wifi password
  every online account password

^ automation implies passphrase less with priv seperation
  usability implies one passphrase to protect the rest of them
  compartmentalisation implies a passphrase per scope

#############

 biological machines are completly flawed
 you cant defend against input / output
 until you consume it
 no ability to prempt the outcome it will have on you against memory
 the more history you give it the harder it is to see

 only defense and attack would be multiple layers of abstraction

 cant control the population without creating unauthenticated symbology
 cant stop anyone else abusing unauthenticated symbology without losing control
 cant blindly follow symbology without being ignorant to the shift of normal it represents

 logic loops that require defeating self preservation to expose
 would imply you are insane if not suicidal to discover, massively reducing defection rates

 entirely probable to miss correlate information into superstition

 making the best assumption based on the information available and updating as more becomes available

#############

BUSYBOX busybox fails

? sed '/match/c \\t\t\t stacks escape character against none printable characters ?/'
  not really a fail more shit to remember when assuming default behaviour
-------------
(fixed 1.32.0 ish)
httpd/cgi-bin
hitting stop in browser
hangs pid open on server
fails to finish executing once the file descriptor is closed
-------------
pkill -x doesnt work... httpd / udhcpc both broken
-------------
httpd -u httpd:httpd < -
root: ps shows httpd
httpd: ps shows nothing
^ mount -t proc -o hidepid=2 ?
  httpd is dropping privs weird ?
* started it with su -ls/bin/sh -c "httpd" httpd and it started functioning correctly ?
  implies you could in effect hide pids from users even if its running as them ?
  dont really get that as a scope
-------------
(fixed 1.33.0)
'&|' pre fills the input buffer with the character after '|' *
alias l='echo input buffer prefill'
echo test &|less
hit enter...
echo input buffer prefill
-------------

#############
torrent seed/leeching allows hosting based on peer review
prevent censorship and denial of service by helping to distribute
https/tls encrypting sucks for caching content
signing massively reduces load
rather than centralizing and encrypting
would effectively allow decentralizing and signing
#
web of trust snapshotting content
normie net... you fucking what ?
wayback_machine... did they really just ?
provider signed + peer signed + metadata from the target to be able to attest validity of the data

ie news outlet, malciously releasing content to manipulate the narrative
^ they get all the protection to do things, no one forces them to deserve it

ability to download save and sign content produced,
removing the ability for them to deny spreading missinformation after the fact
far more accountability given incentives to supress malicious intenet and increase length of time to abuse it

googles oday was always 6 month from timestamp informing vendor to public dump
nothing to stop the vendor being malicious
ability to contain scope hits diminishing returns
everything up starts magically patching itself and its to late

^ https/p2pd based content signing for distribution
  instead of encrypted based content distribution

#############
uefi firmware < - display qrcode/watermark for kernel/initramfs at every boot (cheap ability to verify changes)
#############
rate limting logic...
client pick a number between 0 - 100
server pick a number between 0 - 100 (resource / weight)
if client is higher than server throttle
0 - soft_client - hard_client - combined
#############
#
icmp/udp/tcp
unicast   supports new/established
multicast supports new/invalid
broadcast supports new/invalid
^ other wise using broadcast fails
#
lan   192.168.0.0/16 <assumes upstream>
nat   172.16.0.0/12 172.31.255.255  fc00::/64
tun   10.0.0.0/8    10.255.255.255  fd00::/64
#
127.0.0.0/8
::1/128
#
0.0.0.0/0
::/0
#
169.254.0.0/16
fe80::/64
#
224.0.0.0/4
ff00::/8
#
#############
tl;dr
* udhcpd doesnt check for address collisions, assigns based on mac if client declines the address is incremented
* udhcpc has -a (off by default) it arpings the address then declines if it exists
* cant prove udhcpd actually verifies the address is empty ?
* most of the help output on udhcpd/udhcpc doesnt work
* only controllable bottleneck is udhcpd to verify addresses not depending on clients doing it
* flipped mac address to 00:00:00:00:00:00 on an address collision in dumpleases ?
* dumpleases hostname is 19 characters looks like catv substitution, wikipedia states 63 characters between . with a max of 253
#############
0123456789
abcdefghij
32767 - > 65534
dchgh:x:32767:32767::/tmp/storage/pool/32767:/bin/ash
gffde:x:65534:65534::/tmp/storage/pool/65534:/bin/ash
#############
httpd/$(tr a-zA-Z0-9|head -c128)/$(tr a-zA-Z0-9|head -c 128) < nonce urls vs basicauthentication
############
time to learn - > time to audit - > time to maintain (less is always more)
#############
unpacking symlinks is still just a bad idea
#############
*** dont forget to bitch about oems and efi vars ***
efivar --list
efivar --name 00000000-0000-0000-0000-000000000000-sshd
efivar --name 00000000-0000-0000-0000-000000000000-sshd.pub
efivar --name 00000000-0000-0000-0000-000000000000-sshd-cert.pub
efivar --name 00000000-0000-0000-0000-000000000000-ssh
#############

interface bond && ifenslave functionality...

ifenslave bails if the interface isnt up...
ifenslave supports <bond> <master> <slave> <slave> || -d <bond> <master> <slave>
* all attempts to change active slave are met with permission denied ?
* adding new interfaces works
* removing interfaces works

takes the first slave interface given
clones its mac then sets every future interface to the same mac address
ip link set up / down allows toggling the master

#############
htb [off]----[min]-----[max]-----[ceiling]
low latency udp best effort ie character devices
high latency tcp best effort ie block devices
multiple queues equal polling with multiple disciplines
#############
links console only allows frames and color for single TERM=value (tty:linux, tmux:screen, desktop:st-256color)
highest probability is tty[0-9] inside tmux... so screen default
#############
iw dev wlan0 set 4addr on
brctl addif wan wlan0
^ WDS mode
wifi frames contain - station mac / access point mac / target mac
#############
raid6 bitrot recovery
stripe0 stripe1 parity0 parity1
^ effectively two copies of the data to verify the checksum and recover bitrot
#############
reduce known behavioural patterns
#############

full network view

* tor updated challenge response negotiation to prevent mitm trying to handshake with the target
  identifying protocols and dropping traffic based on it

* tunnel with noise generation to prevent fingerprinting packet size and frequenecy of protocol handshakes

source address as primary key per input queue,
randomized packet padding
randomized output order

isps can tag inbound and outbound traffic based on order and packet size ( for any node on its network )

shuffled padded queue, results in worst case nexthop is tagged with all possible source addresses

src address on queues should be primary key (ensure unique ip addresses per shuffle)
number of hops calculated against number of seeds and leeches
1st hop < - mixed with 3rd hop inherits every previous relays possible ip list outright
2nd hop < - mixed with 2nd hop allows real ip mixing ?
3rd hop < - mixed with 1st hop allows passing off 2nd hops possible ip pool to all new connections

number of seeds   == bridge/entry/guard - > relay/directory/rendevous/exit
number of leeches == total size of possible source addresses the packet could have originated from

implies low user count can only hit X amount of possible packet sources...
^ regardless of how many times you shuffle 20 users you can take the 20 source ips and knock on all their doors...

attempting to tag every route against atleast a % of possible leeches at all times

total size of network vs ability to implicate % of it against every route/path through the network

#############
dhcping + timeouts output
arpping + timeouts true||false
ping    + timeouts true||false
dns     + forward and reverse lookups
ntp     + broadcast time or unicast time (uni/multi/broadcast) (local or remote time)
pscan   + has the ability to if port open or if port closed
nc      + has the ability to send packets over udp or tcp
svd     + has the ability to recieve packets over udp or tcp
^ write a custom script set for network analysis
#############

 [route]

 CONFIG_IP_ADVANCED_ROUTER=y
 CONFIG_IP_ROUTE_MULTIPATH=y

 net.ipv4.fib_multipath_hash_

   neigh - check arp before forwarding
  policy - 0 (l3) 1 (l4) 2 (l3) 3 (custom hash)
  fields - custom hash bitmask

 net.ipv6.fib_multipath_hash_

  policy - 0 (l3) 1 (l4) 2 (l3) 3 (custom hash)
  fields - custom hash bitmask

 * equal cost none deterministic routing

 ip route {list,flush,add,del,change,append,replace,test}
          {default,0.0.0.0}
          via 0.0.0.0
          dev interface
          scope {host,link,global}
          metric 0

 ip route add default via <address> dev <interface> scope global metric 0

 delete default route...
  ip route del default dev <interface>
 add route via interface...
  ip route add <ip>/<mask> via <interface>
 add blackhole route...
  ip route add blackhole 192.168.0.0/24
 metric... (lowest first)
  ip route add 192.168.0.0/24 via 192.168.0.1 metric 0
 multipath routing...
  ip route add 192.168.0.0/24
  nexthop via 192.168.0.1 dev eth0 weight 1
  nexthop via 192.168.0.2 dev eth1 weight 2

 CONFIG_IP_MULTIPLE_TABLES
  tos    - route by tos
  table  - /etc/iproute2/rt_table -
  proto  - /etc/iproute2/rt_proto - 
  scope  - /etc/iproute2/rt_scope -
  metric - 0-4294967295 (32 bit integer)

 bond:

  creates single mac addresses used through every interface
  interfaces must be on the same network
  failover mode (no multiplexing)
  switch aware (multiplexing)
  ip link add name bond0 type bond
  brctl addif bond0 lan

 bgp:

  required to host an address range across multiple providers

#############

*** wtf raw format

remove ocsp and force fingerprint pinning in dns < - removes the need for a revoke network (massively complex)
problem becomes ability to find and verify the most recent timestamp sign
client view of the network
what you have, battery,wired,rf
listen or ping challenge response
whats available? vs prove your XYZ?
hotp,totp - asym crypto functionality from sym crypto
session ticket in queue increases priority against time/attempts
^ use session ticket to drop on abuse
* incentivise session then use it to block
* incentivise authentication then use it to block
oneshot/session/authenticated top level queues
sasl session vs sasl authentication < - click register server pins the current fingerprint to a user database
table columns
table rows
distribute table columns like torrent files && p2p pull rows with encryption

^ should have written that out when it was fresh
  i still get it either way

#############
CONFIG_USB_SERIAL_CP210X < - two usb serial adaptors
#############

obfuscating and fuzzing basic assumptions

assumptions of offline tracking and ability to restore
firmware keylogger  < - cant differentiate between window changes ? cant account for mouse movement ? on screen keyboard ? grep usb-keyfs log + trailing
firmware filesystem < - mount --bind / /mnt;tar zcvf /storage/rootfs.tar.gz .;openssl sha1 /storage/rootfs.tar.gz
firmware kernel     < - /proc/kcore gdb elf image ? anyway to prove the kernel file is the kernel in memory ?
firmware memory     < - no idea was already reaching with kernel

management engine wifi ssid + passphrase (can rf sniff in controlled environments)
video dumps without keylogging seek / find would be hours of analysis
storage firmware manipulation regex and replace strings from any read / write sequence
peripheral firmware manipulation full usb or pci bus acces entire protocol and any device as attack scope

build hardware signed backups
usb hardware signed backups
firmware manipulation when reading from disk to memory

randomize file system paths and names < - automatic targetting will fail or leave evidence

multiple /dev/input devices ? and flood keystroke interupts with /dev/null output to create background noise ?

search for overflows in data retention ? controlled environment offline and overflow storage assumptions crash or drop

remove predictable behaviour patterns and defeat base assumptions in malware automation < - proof allows basic principles of cointel

#############

userland none priv rootkit...

drop in highest probability of re execution $HOME/.bashrc $HOME/.bash_profile

flag inotifyd on common $PATH entries for binary execution

inotifyd <prog> /bin/ls /bin/find /bin/ps /bin/tcpdump /bin/wireshark 

<prog> needs to pkill itself if probability of being discovered increases

then wait for reexecution on the target

search for whitelisted network programs .bash_history (target knowledge ssh? mysql?)

phone home over nslookup for ping < - dns always works

search for interpretted languages or anything with jit execution python/cython javascript

search for arp to ip addresses

search for bookmarks any internet history from available programs

find a whitelisted domain a whitelisted command and phone home

phone home
nftables dnat all traffic to tcpsvd/udpsvd
append file named after incoming ipaddress
easy exfil over every port

#############

want a low profile programmable usb that can be dead dropped

small enough to block a usb port and not be seen until after first boot or screen unlock

code execution based on one time burn or exfil

#############
CONTENTS - grep -e '^dir' < - find paths
           grep -e '^obj' < - find binaries 
           grep -e '^sym' < - find symlinks
DEPEND   - list of category/package
NEEDED   - list of libraries per binary
REQUIRES - list of all binaries
#############
3 images at all times
dev           - > staging     - > prod
single player - > multiplayer - > wan
open          - > locked      - > live
#############

 something you know < - prompt for passphrase on cryptsetup
 something you have < - take the first skipped block as passphrase salt
 nuke  < - kill the something you have no ability to recover
 panic < - return to data at rest leaving something you have in tact

 iv=00000000000000000000000000000000 (32)
key=0000000000000000000000000000000000000000000000000000000000000000 (64)
384=d654902b550e334bb6898d5c4ab8ebe1aedc6c85368eafe28e0f89b62a74a23e1ed20abbc10c02ce321266384d444717 (96)
   =000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (96)
    EFBAA4377D065A7CD0DE0A83D1825CF8A6D399210F6B6DF4799DB1DCB384E8AF7A5A1F95C3F9D1210433C58A47A556C   head -c48
    B6851A5030955FFE184E2062825FFF13FA4D26E8EBA3058290D5718A150593384B4814273CB8FF6F8EB48AC4783B8B43A head -c49
    24411ADAB23DEF4BC74435B3244374E2F6786B48B1AFEA4564CDECD03771CA3C73BCBA2B721F9343C44993A5A55C85DA  hexdump -n48
    F5F858F11D80C382492D3FF6E327F577BB55AD459F9A0B34474D47ED3E0574A84AA5F2E4AB2B49B3CEAC68FDA5FC3430E hexdump -n49

 max iv  32 digit
 max key 64 digit
 sha384  96 digit
 head -c48 95 / head -c49 97
 hexdump -c48 95 / hexdump -c49 97
 one extra digit without using openssl sha384

 # write uuid to disk and save the hexdump for openssl enc
   have="$(head -c49 /dev/urandom|tee "${1}"|hexdump -ve '/1 "%02X"')"
 # grab the secret and save the hexdump for openssl enc
   have="$(hexdump -n49 -ve '/1 "%02X"' "${1}")"
 # grab something you know
   read -rp 'passphrase: ' know

 printf "%s" "${have}${know}"|
 openssl enc -e/-d -salt -md sha512 -aes-256-cbc -iv "${secret:64:32}" -K "${secret:0:64}" -in /dev/stdin -out|
 cryptsetup --key-file - --key-size 256 --hash sha512 --cipher aes-cbc-essiv:sha256 --offset 1 open --type plain /dev/block storage

 /root/bin/persistence.setup - setup encrypted persistent storage
 /root/bin/persistence.mount - remount encryted persistent storage

 /root/bin/nuke  -
  overwrite the offset 512 byte block (depends on hardware as to it actually being overwritten)
  poweroff...
 /root/bin/panic - 
  poweroff...
  should be reboot implies having persistent boot setup which i cant automate ?
  cant risk killing processes and attempting to umount doesnt have force
  and risk of any pid being stuck with cwd would block the entire script

#############

large scale peer verified checksum verification...

 tl;dr
 pull upstreams copy of source code using GENTOO_MIRRORS=""

 every user pulls from src_uri,
 hashes the distfiles/source.tar.gz
 checks the download they get against the distfiles.gentoo.org manifest

 now have an entire distributed network of people on different equipment behind different isps behind different country laws

 allows verifying source pulls from multiple parties and signing / agreeing on them

 allows alerting on mitm / compromise

#############

if you have web portal on cleartext public wifi
steal a mac already in use / whitelisted poof instant access without needing to go through a web portal

if you have web portal on shared encrypted public wifi
steal a mac already in use / whitelisted
deauth the original address and use their mac address to reconnect to the network...
implies stealing from someone that doesnt know how to spoof deauth or scan your location :D
any ap that doesnt re force T&C signing or registration on disconnect / reconnect
or has a long enough timeout should probably allow connecting straight to the node as another user ?
^ would need to go through on a per implementation basis and check results

or try the same mac on different bssid with shared ssid < - see if the whitelist is per device or centralized for roaming

#############

# firefail

tl;dr - vpns are bad mkay

exposes everything in netstat -tunlep with 0.0.0.0 to a random lan
linking roaming devices signs your entire web history
linking roaming devices doxxes your location for every device

if you travel behind nat subnets you gain meta data privacy

vpns completly remove meta data privacy
vpns dont provided e2e encryption they only provide a tunnel
your moving the first hop to a new exit node

gets to log and store all traffic signed by a private key from a single point && get to mitm cleartext traffic

you just lost all anonymity and gained not a single bit of security...

https everywhere
full e2e client and server authentication for any services
remove and block all clear text traffic by default
browser fingerprint
create fake meta data over multiple sites / accounts

if you know someone using a vpn rent the same one...
use the same os and browser they do in a vm
start using their name with an email provider
start registering accounts to known data sharers and advertisers
with that email and use as much of their info you can scrape
you now have a fully finger printed virtual machine
that using existing information is probably going to stamp all leaks against someone else
^ fake doing a bad job at obfuscating data so it looks like bobs trying to use a burner through his vpn under a different name


less is definitly less
get fingerprinted and automatically click every advert available on everypage incease the amount of noise
upload your own photo under stupid amounts of names and upload your own name against stupid amounts of photos
age a load of social media accounts and try to kill facial recogonition databases by miss tagging names
spoof photo meta data and upload from multiple different locations etc
if you have heaps and heaps of data and dont obfuscate a greppable string to atleast make it hard you fail
increases attack scope to people that can validate timestamps for a massive pool of information

^ same as using generic objects / common names for irc nicks obfuscates search lookups

#############

entire work flow involves two harddrives

one with all the work / configs on it
one for ephemeral copies and testing

work drive only gets ethernet plugged in to update portage, distfiles and shared files

multiple offline backups to diff check against before and after giving the box internet

swap out the harddrive and do all testing on the ephemeral clones with ethernet plugged in

popped far to many times and had people edit config files
doesnt cover the fact all the raw source code and binary repositories are also exposed 
but limits the ability to edit any persistent files uploaded to github

common sense dictates multiple channels
build server with a usb modem
desktop to run images made from it
rce from running an image with internet cant get persistence

^ bar hardware firmware

#############

# bootfs/keyfs signing the bootloaders/kernel/initramfs

self/usb-sign
self/usb-verify

 signature - execute openssh sha512 on every file in bootfs, sha512 of that output and sign the dgst with sign.pem, save it into keyfs as checksum
 verify    - execute openssh sha512 on every file in bootfs, verify the sha512 of that output against sign.pub

* snake oil bar obscurity

  if you change the public key when it boots it wont care up until asking for the passphrase of the pem key

  offsite offline online
  firesafe master key
  usb tpm subkey

#############

x509 for 2fa

 x509 works both directions
 client certificate authority - client needs a short validity period
 server certificate authority - server needs a long validity period

 server listens for incoming connections signed by the client certificate authority
 server checks the incoming certificate matches the ip or rdns of the incoming connection and is still valid
 can add any other key:value entry to the certificate for access levels

 client has access to the client certificate authority private key
 sign the certificate with your current wan address and access required
 everytime you logout or kill a session you need to revoke the certificate used

 revoke network is needed so all unaccounted certificates cant be reused to gain access
 if you fail to provide a revoke network at any time you cant verify any of the certificates being used

 the more valid certificates available that have or havent been revoked the greater the risk someone can get entry
 keeping the validity period as short as possible and revoking the certificate when the session is killed

#############

ephemeral keys...
 so you have a single gnupg key
 something gets you flagged someone starts full packet logging for your ip...
 you end up with 6 months of logs
 someone finally kicks your door in and beats you to death with a wrench
 if your only using a single key they get all the current information you have and get the entire backlog

 if your running 1 hour certificates any compramise only gets UPTO the last hour of logs and UPTO the last hour of network traffic...
 ^ after the fact they can start signing keys and other nasty stuff...
 run a 24 hour canary and you only have to hold out for a short period of time before you push a network wide revoke
 then they can attempt to do whatever they want the network should propagate the revoked keys

#############

perfect forward secrecy with public comms vs private comms

ngircd used for private messaging implies need for 4096 diffie
server is logged and keys are popped
decrypting logs is based on cracking diffie hellman

lighttpd used for nothing but downloading public files
server is logged and keys are popped
cracking diffie gets nothing but cleartext already public files

^ could argue enabling basic auth or any passphrase protected hosting requires huge diffie

never decrypt into anything other than tmpfs

#############

given email has had password reset and account ownership forever

running your own mail server

 implies control over the dns MX record can redirect all password reset requests
 ability to edit dns to the server sending account recovery hijack every mx record they do a lookup for and pass tls verify

 random web server gets reset requests pulls your record searches for MX
 checks the domain in the mx record has a valid ssl certificate then just sends it your password reset form...

 ^ that as a sort of every web account ive ever seen shiny cleartext fuck up makes me giggle 

 implied ability to inject cleartext dns gives ability to route all cleartext emails through server
 ^ in terms of password reset forwarding to target is irreliventa
   can spoof email from any server using spf dkim and dmark entries

 mitm all mx replies allows stealing all outgoing mail ?

 say dnssec is actually enabled...

 webserver gets your email
 does mx lookup
 checks the signature
 private key owner controls where mx points to (bar the whole trusting cert authorities)
 commonname lookup on that record (implies trusting the entire CAdir)
 literally forces popping a ca provider or popping a clients CAdirectory...

#############

generate a key pair on boot drop fingerprint into mac address
 ^ - fingerprint pinning layer2 < - arp cache / link local dns
  ^ - authenticated dhcp to dns handoff pinning on layer3

init 1024 rsa key pair fingerprint public key set mac address
only have XX:XX:XX:XX:XX:XX pick doubles from split sections along the mac
basically mac isnt long enough for a secure fingerprint

busybox http hosting /public_key, arping and curl public_keys

udhcpd - notify_file: every dhcp request, < - doesnt have environment variables...
         worst case...
         dumpleases take mac,ip and hostname
         curl hostname/public_key > /tmp/domain/udhcpd/ip*
         check everything in dumpleases mac matches the public key
         add hostname / ip entry into unbound
         add fingerprint txt record
         probably needs a decrypt challenges to prove it owns the private key

 pretty much implies adding a challenge response to udhcpd.wrapper
 to verify it owns the private key to the advertised public key then add it to unbound

* can have multiple hostname entries cant have multiple ip entries

implement encrypted dns as a root authority
use dns lookup to get the address and fingerprint
then open a tunnel regardless of protocol to the client with stunnel

#############
#############
#############
#############
#############
#############
#############

[REFERENCE]
#############
cryptsetup open --key-file /dev/urandom --type plain /dev/sdXYZ wipe
dd if=/dev/zero of=/dev/mapper/wipe bs=4096 status=progress
#############
nmap
 -sL      list scan
 -sn      ping scan
 -sV      service/version
 -O       os detection
 -p1-1024 port range
 -T4      timeout
still hasnt once managed to actually find the only other node on the subnet : / and still cant figure out why 
#############
kill a tcp connection the kernel sends packets out without any uid/gid tags
which is triggering the NEW logging...
means the tor user and group filters dont make sense...
kernel can go rogue and send packets to places other than the socks proxy
#############
partitions...
 raid       - requires same sized partition on multiple not always same sized disks...
 gptfdisk   - partition the disks
 mdadm      - dump them into raid
 cryptsetup - map them against a key
 e2fsprogs  - write a filesystem to it
everything else is using a mkfs.ext4 on the entire internal drive - less bloat
#############
alias ps='ps efo pid,uid,gid,pcpu,pmem,comm --pid 2 --ppid 2 -N' # procps
alias ps="ps -o pid,ppid,pgid,user,group,etime,comm|awk '\$1 != 2 && \$2 != 2'" # busybox
#############
test=nick!user@hostname
echo "${test%?}" remove last
echo "${test#?}" remove first
echo "${test#*@}" == hostname
echo "${test%!*}" == nick
#############
mdadm --assemble --scan 
mdadm --assemble /dev/md/name --update=name /dev/sda1 /dev/sdb1 /dev/sdc1
takes hostname:name as name or 127 if name is empty ? apperently
#############
pgrep -x init|grep -vx 1 < - kill all init bar pid1
pkill -xn init           < - kill the last spawned init really handy 
#############
cmd0 < file.txt | cmd1 | ( [[ -f /etc/something ]] && cmd2 || cat ) | cmd 3
#############
mdadm --create /dev/md127 --name server --level=5 --chunk=4096 --raid-devices=3 /dev/vda /dev/vdb /dev/vdc
mdadm --assemble --scan
#############
cryptsetup --hash sha512 --cipher aes-xts-plain64 open --type plain /dev/md127 storage #--key-file /path/to/keyfile
#############
find . -perm +6000 -type f < - find all setsuid 0 searches for all perms regardless
find . -perm +4000 -type f < - find all setguid
############## binhost < - never use it entire config boiled to down to adding this to any gentoo install
PORTAGE_BINHOST="https://host.guestdomain/packages"
EMERGE_DEFAULT_OPTS='--getbinpkgonly' < - only pull fail if not available
FEATURES="binpkg-multi-instance buildpkg getbinpkg nodoc noinfo noman" < - pull and build if not available
############# forget this far to often...
curl -LO https://github.com/person/repo/tarball/version == repo.tar.gz
#############
iw dev wlan0 station dump < print actually attatched nodes not dumpleases...
#############
[[ -e exists ]] && echo true || echo false
[[ -f /realfile ]] && false || echo weeeeeeeeeeeeeeeee
[[ -d test ]] || mkdir test && cd test
 assumed shell grabbed command and decided to execute && ||
 executes in order first &| if hit inherits the second &|
#############
mdadm --create /dev/md127 --name server --level=5 --chunk=4096 --raid-devices=3 /dev/vda /dev/vdb /dev/vdc
cryptsetup --hash sha512 --cipher aes-xts-plain64 open --type plain /dev/md127 storage
#############
mpv --no-video "$(ls|shuf -n1)" # albums|films|series
while :;do mpv --no-video "$(find . -type f|shuf -n1)";done # songs in media/music
#############
[[ -f "${log}" ]] && { jobs %% || { tail -F /tmp/logs/syslog|while read -r;do sleep .2 && printf "%s\n" "NOTICE &SERVER :${REPLY}" >> "${input}";done & }; }
#############
jobs %% && {
 rm "${log}"
 printf "%s\n" "PRIVMSG ${reply:1} :LOGOFF" >> "${input}"
 kill %%; } || {
 touch "${log}"
 printf "%s\n" "PRIVMSG ${reply:1} :LOGON" >> "${input}"
 tail -F /tmp/logs/syslog|while read -r;do sleep .2 && printf "%s\n" "NOTICE &SERVER :${REPLY}"  >> "${input}";done &
}
#############
tr -cd 'a-zA-Z0-9:\n'|while IFS=: read col0 col1 col2;do ;done
#############
mkdir -m 755 directory < - less lines
#############
nft list meters|awk '/meter/{print$2}'|while read;do nft list meter filter "${REPLY}";done|grep -e meter -e elements|tr '{},' '\n'|grep -v -e elements
#############
tic /st/st.info - dumps ~/.terminfo/s/{st,st-256color,st-meta,st-meta-256color}
#############
sed -i '8itext here' file , sed -i '1d,3d' file
############
test="192_168_1_1"
echo ${test/_/.}
echo ${test//_/.}
############
set colorcolumn=65
############
awk '{ for (i=1; i<=NF; ++i) {sum[i]+=$i; $i=sum[i] ); print $0)' # sum of columns
awk '{ sum=0; for (i=1; i<=NF; ++i) {sum+=$i; $i=sum); print $0)' # sum of rows
awk '{sum+=$2} END {print sum}' /proc/net/dev
#############
diff -r dir0 dir1 | less
#############
xwd + xv - request root screenshots or window screenshots view them in xv
#############
package="x11-wm/dwm-6.1-r1-5::gentoo";echo "${package%%-[0-9]*}"
grep '^\[' client.build|awk '{print$4}'|sort -u|while read -r;do printf "%s\n" "${REPLY%%-[0-9]*}";done > client.packages
#############
testing find /var/db/pkg -type f -name REQUIRES -exec grep -H libname {} \; dependency killer
#############
[ -x exists ] || exit # cant test for file or directory needs to check the name isnt taken
#############
set colorcolumn=65
set list
ctrl+p replace tab...
#############
ip link add link eth0 name eth0.110 type vlan id 110
brctl addif bridge eth0.110
#############
nmap auto skips 9100 < - feels fairly obvious this should be abused
#############
trap sigexit SIGEXIT
sigquit(){ echo sigexit; }
^ happens on program close unless sigkill
#############
ctrl+c SIGINT
trap sigint SIGINT
sigint(){ echo sigint; }
#############
ctrl+\ SIGQUIT
trap sigquit SIGQUIT
sigquit(){ echo sigquit; }
^ same as sigterm but triggers a core dump?
#############
trap sigterm SIGTERM
sigterm(){ echo sigterm; }
kill <pid>
^ should trigger sigterm and sigexit
#############
ctrl+z SIGTSTP
trap sigtstp SIGTSTP
sigtstp(){ echo sigtstp; }
fg || kill -SIGCONT <pid>
if you hijack sigtstp it hangs doesnt give the shell back and fg doesnt work ?
would need to atleast have a minimum function to implement the above before stealing
#############
CONFIG_VGA_SWITCHEROO
chown root:wheel /sys/kernel/debug/vgaswitcheroo/switch
echo ON  > turn on disconnected gpu
echo IGD > connect ingegrated graphics to output
echo DIS > connect discrete graphics to output
echo OFF > turn off disconnected gpu
#############
wpa_supplicant.conf
country=GB
iw reg set GB
iw wlan0 set type monitor
#############
printf "\n%s\n\n" "message"|busybox sendmail -f user@domain.tld -S domain.tld user@domain.tld < - really need to check opensmtpd can blacklist user/domain from persistent storage and cant restart with root ?
#############
userland rootkit inotifyd on /proc access refork all executables to change pid to already scanned ranges
#############
gcc -xc -E -v
gcc -xc++ -E -v
#############
until ip link set dev "${interface}" address "$(hexdump -n6 -ve '/1 "%02X:"' /dev/urandom|head -c17)";do sleep .1;done
#############
aplay -l
arecord -d 10 /tmp/test.wav
aplay test.wav
#############
find . -type f -name directory -exec vim -p {} +
#############
${key:-value} use default
${key:=value} assign default
${key:?[print this to stderr]} print error
${key:+value} use alternative value
#############
{ IFS=: read timestamp mac ip4 ipv6 hostname cpu mem loadavg... < /file; }; echo $timestamp $mac
#############
until [ "${#}" == "0" ];do echo $1;shift;done
#############
tmux -S /tmp/socket new-session -As session (create or attach to existing session)
#############
vim -p file0 file1 file2 < - (tab|shift+tab) (ctrl+n|ctrl+p) switch tabs
#############
difference between
. file        - executes in the current shell trap 'pkill -P $$;exit' kills the running terminal
/bin/ash file - executes ash in the terminal running ash pkill -P $$;exit kills the sub ash not the terminal
./file        - with TPE executes ash with script name under the current terminal shell
PATH          - executes ash with script name under the current terminal shell

should be paired with shit on . executing inline and not doing function one way variables (lets you include duplicate sections of code)
#############
rm /etc/mtab
mount -o ro /
mount -o rw /
^ ro root mount without /etc/mtab present doesnt allow remounting anything as read write?
  mount command refuses to run anything because it cant find /etc/mtab
  which cant be created because read only rootfs
  got stuck on the command line for a good 5 minutes then gave up
#############
screenshots - xwd and imagemagick
xwd -frame -out window.xwd
xwd -root -out screenshot.xwd
convert screenshot.xwd screenshot.png
#############
icmpv6 type {nd-router-solicit,nd-router-advert,nd-neighbor-solicit,nd-neighbor-advert,nd-redirect} accept
^ types needed for slaac
#############
find . -mmin 5 < - all files in the last five minutes
find . -mtime 1 < - all files in the last day
#############
/proc/*/io requires
 TASKSTATS
 TASK_XACCT
 TASK_IO_ACCOUNTING
#############
http://etalabs.net/sh_tricks.html
############# rsync based network pool ?
inotifyd on directory
 list of headers < - dns pull domain/path seeds
 list of clients < - peers
  header script 
  client script
  want to write header 
  want to pull headers/peers
  can still create dead pools of leaches without wan facing
#############
grep '^\[' client.build|awk '{print$4}'|sort -u|while read -r;do printf "%s\n" "${REPLY%%-[0-9]*}";done > client.packages
#############
cat /sys/block/sda/queue/hw_sector_size
############# devtmpfs /dev/shm fail
devtmpfs ignores size= completly < - any global write to dev can trigger oomkiller
cat /dev/urandom > /dev/shm/alltheram from any user causes oomkiller
mounting -t tmpfs -o size=7% tmpfs /dev/shm
#############
not posix == ${var:0:2} ${var%%} ${var##} < - not dropping work arounds just look stupid; update everything else eventually
#############
dirty is the data in memory waiting to be written to disk
write back is the current throughput of data from memory been written to disk
#############
[ -x exists ] || exit < - check anything trying to create files or directories is checking path exists
[ -e thing ] && echo true < - never checked anything isnt fail
#############
sshfs -o allow_other user@domain.tld:/storage /storage/remote # root can run sshfs with nosuid mounts - creates more permissions problems
#############
menuconfig hit z < - turn that on by default somehow ?
#############
https://github.com/nsacyber/Hardware-and-Firmware-Security-Guidance
#############
#finding the last index of a variable based on delimeter ? < - basename / dirname with more toggles sub sets
# echo "${test##*.}" == one
# echo "${test#*.}" == three.two.one
#finding the first index of a variable based on delimter < -
# echo "${test%%.*}" == four
# echo "${test%.*}" == four three two
############# # things that dont
# echo "${test##.*}" == four.three.two.one
# echo "${test#.*}" == four.three.two.one
# echo "${test%%*.}" == four.three.two.one
# echo "${test%*.}" == four.three.two.one
#############
make oldconfig
make menuconfig
make all -j16 -l16
make DESTDIR=/tmp/boot install
make INSTALL_MOD_PATH=/tmp/modules modules_install
#############
#!/bin/sh
something_in_path        < - doesnt allow exporting variables
source something_in_path < - does allow exporting variables
. something_in_path      < - does allow exporting variables
* using source is the same as include
* allows splitting files into "functions" that have global env scope
 jump/goto rather than system calls
#############
exec tmux -S /path/to/socket new-session -As  'session-name' -c 'chdir'
exec tmux -S /path/to/socket new-session -Ads 'session-name' -c 'chdir'
#############
tftp -gr filename 127.0.0.1 69 < - pulls remote file
tftp -pl filename 127.0.0.1 69 < - pushes remote file
#############
oom_score_adj < - can set scores on oom killing fail over order range: -1000 +1000
#############
dropped per pid diskio < - /proc/1/io; general setup - > CPU/TASK time and stats accounting - > enable extended accounting over taskstats
#############
android phone settings apps - 'package installer' disable == brick...
#############
sigexit(){ true; }
sigterm(){ true; }
sigstop(){ true; }
sigquit(){ true; }
sigint(){ true; }
sighup(){ true; }
#############
trap sigexit SIGEXIT
trap sigterm SIGTERM
trap sigstop SIGSTOP
trap sigquit SIGQUIT
trap sigint SIGINT
trap sighup SIGHUP
#############
mkfifo named pipe < - blocks input when full
#############
make config < - if ./configure doesnt already exist
#############
meson build                         < - creates a build directory and populates it
meson configure build               < - prints configure options
meson configure build -Dprefix=/usr < - sets options
ninja -j8 -l8 -C build              < - change to directory and build
#############
entire concept of defense is anyone one hop up the trace route can spoof every ip address
#############
removing predicatble behaviour patterns removes the ability to automate malware
#############
openINTEL < - active dns real time logging
#############
amd:
tpm - trusted platform module
sme - secure memory encryption
sev - secure encrypted virtualization
tee - trusted execution environment
iommu - keeps segfaulting
#############
mknod -m 0600 /dev/nbd0 b 43 0
#############
echo 3 >> /proc/sys/vm/drop_caches
#############
loglevel=0
earlyprintk=/dev/sr0
#############
yarrick/iodine
sensepost/dns-shell
#############
C10k problem - old stuff on fcgi / 10k requests a second
#############
ip link set wan multicast {on,off} < - 
ip link set wan arp {on,off} < -
^ can turn arp off and setup fixed ip addresses for macs
static mac to ip assignments ?
#############
$? - last commands exit status
#############
set this might be usefull
printf "%s\n%s\n%s\n%s\n" "${1}" "${2}" "${3}" "${4}"
#############
446 bytes bootstrap
64  bytes partition table
2   bytes signature
dd if=/dev/zero of=/dev/sda bs=512 count=1
dd if=/dev/zero of=/dev/sda bs=446 count=1
#############
xdotool < - script keypresses
#############
netcat -p allows controlling source port used to establish connections...
#############
LD_LIBRARY_PATH=$PWD:$PWD/ ./executable --help < - worked for running self contained programs...
#############
du -shx
#############
#!/bin/sh
#############
. /etc/services/ircc/variables
#############
pgrep tmux|while read;do grep -q "${ircc_storage}" "/proc/${REPLY}/cmdline" && kill "${REPLY}";done
#############
%wheel ALL=(ALL) NOPASSWD: ALL
#############
ip protocol udp skuid nobody skgid nobody redirect to 5353
ip protocol udp skuid nobody skgid nobody redirect to 9040
#############
set -o errexit
while :;do echo outer
while :;do echo inner
echo continue;continue
echo break;break
done
while sleep 60;do echo ping;done
#############
set -o errexit
usage(){ cleanup; }
trap usage EXIT
thing || (failure case)
timeout -s SIGHUP openssl s_client -connect -servername
#############
alias irssi='tmux -S "${HOME}/irssi/tmux" new-session -As irssi -c "${HOME}/irssi" irssi --home "${HOME}/irssi" --config "/etc/irssi.conf"'
#############
alias arp_scan='nmap -R -sn'
alias service_scan='nmap -R -sV --version-intensity 9 -O --osscan-guess'
#############
${test/strip} # first
${test//strip} # all
${test/strip/replace} # first
${test//strip/replace} # all
#############
git clone https://git.openwrt.org/openwrt/openwrt.git shared/.openwrt
git clone https://erdgeist.org/gitweb/opentracker shared/.opentracker
#############
alias shuffle_artist='while :;do mpv --no-video "$(find ${media}/sound -type d -mindepth 1 -maxdepth 1|shuf -n1)";done'
alias shuffle_album='while :;do mpv --no-video "$(find ${media}/sound -type d -mindepth 2 -maxdepth 2|shuf -n1)";done'
alias shuffle_song='while :;do mpv --no-video "$(find ${media}/sound -type f|shuf -n1)";done'
alias shuffle_film='while :;do mpv "$(find ${media}/video -type f|shuf -n1)";done'
alias shuffle_series='while :;do mpv "$(find ${media}/video -type d -mindepth 1 -maxdepth 1|shuf -n1)";done'
#############
menuentry "network" { linux /kernels/qemu root=/dev/nfs rw nfsroot=192.168.1.3:/,tcp,vers=4 ip=dhcp; }
#############
distcc is -jobs local -load remote
#############
find / -type f -exec getcap 2>/dev/null {} \;
#############
while sleep 30;do echo ping;done
#############
v6="fd00::${v4//./:}/64"
#############
ip route add 0.0.0.0 via 1.1.1.1 dev eth0 scope link metric 100
#############
openssl req -text -noout -in file.csr
openssl x509 -text -noout -in file.crt
#############
iw dev "${interface}" interface add "${interface}-ap" type managed
iw dev "${interface}" interface add "${interface}-mon" type monitor
iw dev "${interface}-ap" del
iw dev "${interface}-mon" del
#############
[ -f "${keyfs}/secureboot" ] || openssl req -x509 -new -newkey rsa:2048 -sha256 -days 365 -nodes -outform der -keyout "${keyfs}/secureboot" -out "${bootfs}/public/secureboot" -subj '/CN=secureboot'
#############
delimeter stripping parsable outputs... printf "%s\n" "[${variable//]/.}]" can strip the closing tag and ignore any duplicate input
#############
#[56] [62] [nick(16):user(9):realname(50)] freenode only ?
#nick="NICK $(tr -cd a-zA-Z</dev/urandom|head -c16)"
#user="USER $(tr -cd a-zA-Z</dev/urandom|head -c9) 0 * :$(tr -cd a-zA-Z</dev/urandom|head -c50)"
#############
resource:///defaults/preferences/firefox.js < - has random things in it ?
resource://gre/greprefs.js < - has about:config references in it
#############
ct state established meter nat4 { ip daddr . ip saddr counter } accept
ct state established meter nat6 { ip6 daddr . ip6 saddr counter } accept
ip protocol icmp accept
ip6 nexthdr icmpv6 accept
meter output { skuid counter }
ip protocol icmp accept
ip6 nexthdr icmpv6 accept
meter input { skuid counter }
#############
dns (query_filter - > tls - > dnssec - > response_filter, caching server)
#############
for i in $(seq 0 2);do sleep ${RANDOM} & done
sleep 1
jobs
sleep 1
pkill -P $$
sleep 1
jobs
#############
timeout -s SIGPEW 3 sh -lc 'read -p interupt && interupt' || timeout
timeout -s SIGHUP 3 sh -lc 'i_server </dev/null &>/dev/null'
#############
timeout -s SIGPEW 3 sh -lc 'read -p interupt && interupt' || timeout
#############
xz -T0 --check=crc32 > <image>
#############
grub-standalone: --modules "part_msdos part_gpt" # gpt partitioned storage requires early loading of modules
#############
dbclient 172.16.0.1 tar cC /path .|tar xC /path
tar cC /path .|dbclient 172.16.0.1 tar xC /path
#############
nc -p 123 -s 172.16.0.1 -n -u 172.16.0.3 123
nc -p 123 -s 172.16.0.3 -n -u 172.16.0.1 123
netstat -uneap
^ that with invalid traffic would be enough to promisc mode lan
#############
server extract, client send
nc -l -p 4444|tar x .
tar c .|nc 172.16.0.1 4444
#
server send, client extract
tar c .|nc -l -p 4444
nc 172.16.0.1 4444|tar x .
#############
timer(){
unset count
until [ "${count:-0}" -gt "${1:-300}" ];do
 printf "%s\r" " [ ${1:-300} : ${count:-0} ] "
 count="$((${count:-0}+1))"
 sleep 1
done
}
#############
env -i /sbin/httpd -p 80 -u httpd:httpd -h "${service_storage}" -c "${service_storage}/config" # refuses to show pid when running ps as httpd ?
#############
alias serial='microcom -s 115200 /dev/ttyUSB0'
#############
-------------
cheap remote desktop
-------------
local: Xephyr -ac -listen tcp :13
-------------
remote: DISPLAY=172.16.0.1:13 dwm-guest
-------------
#############
siaddr 172.16.0.1
boot_file pxe
#############
emerge
-avbkgp1 < - (ask verbose build keep get pretend oneshot)
--update --deep
--nodeps --onlydeps
--emptytree
--keep-going y
--prefix < - set EPREFIX variable
--regen  < - builds up metadata cache to make resolving dependencies quicker
--prune  < - removes older versions of packages
#############
xrandr --output Virtual-1 --auto < - auto magically fills to current vncviewer size
#############
echo $((16#01)) < - prints int from hex...
#############
firefox
ctrl+l < - address bar
ctrl+q < - close everything
ctrl+w < - close tab
ctrl + tab < - cycle tabs
ctrl + (page up) || (page down) < - cycle tabs hold shift to move positions
alt + ( <- ) || ( -> )  < - back/forward page
#############
sysctl -n kernel.random.uuid
#############
qemu-nbd --port=10809 --bind=0.0.0.0 --shared=9
 --export-name=mint --description='linux mint install'
 --fork
 --format=raw
 /tmp/storage/
qemu-wrapper -b nbd://172.16.0.1/export 
#############
meson install -C build --destdir /tmp/install
#############
arecord -l                                      # display all sound cards with capture
ffmpeg -f v4l2 -list_formats all -i /dev/video0 # display all supported webcam resolutions
ffmpeg -f x11grab -i :0 -frames:v 1 screenshot.jpg                                      # screenshot x11
ffmpeg -f alsa -i hw:1 -f x11grab -i :0.0 -s 2560x1440 -r 24 /tmp/output.mp4            # record x11 and audio
ffmpeg -f video4linux2 -i /dev/video -s 1280x720 -frames:v 1 screenshot.jpg             # screenshot webcam
ffmpeg -f alsa -i hw:1 -f video4linux2 -i /dev/video0 -s 1280x720 -r 24 /tmp/output.mpg # record webcam and audio
mpv udp://:4444                        # listen on port 4444 for input
ffmpeg -f mpegts udp://remote.com:4444 # stream video to this address
#############
install -o 0 -g 0 -m 0644 dev/null etc/passwd
install -o 0 -g 0 -m 0644 dev/null etc/group
install -o 0 -g 0 -m 0644 dev/null etc/shadow

users="root nobody" c="10000"
for i in ${users}
do
 printf "%s\n" "${i}:x:${c}:${c}::/tmp/home/${i}:/bin/ash" >> etc/passwd
 printf "%s\n" "${i}:x:${c}:" >> etc/group
 printf "%s\n" "${i}:!:::::::" >> etc/shadow
 c="$((${c}+1))"
done
#############
[ "${2:0:7}" == "file://" ] && read public < "${2:7}"
[ "${2:0:7}" == "http://" ] && public="$(curl --silent --connect-timeout 3 "${1}")"
[ "${2:0:7}" == "ssh://"  ] && public="$(dbclient "${1##*:}" 'cat ${1%%:*}')"
#############
printf "\n%s\n\n%s\n\n" "[http]" "receivepack = true" > ".git/config"
#############
until [ -f "/tmp/nope" ] ; do [ ${count:-0} == "3" ] && break || sleep 1 ; count="$((${count:-0}+1))" ; done
#############
for i in /bin/* /lib/* /lib64/* /sbin/* /usr/bin/* /usr/lib/* /usr/lib64/* /usr/sbin/*
do
ash /usr/bin/ldd $i | grep 'not found' && printf "%s\n" "$i"
done
#############
#stage3="http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64-musl-hardened/"
#match='<a href="stage3-amd64-musl-hardened-................\.tar\.xz">'
#stage3="http://distfiles.gentoo.org/releases/amd64/autobuilds/current-stage3-amd64-hardened+nomultilib/"
#match='<a href="stage3-amd64-hardened+nomultilib-................\.tar\.xz">'
#############
ip addr <address>/<subnet> dev <interface> brd {+,-} scope <scope> label <label>
brd + # set broadcast address
brd - # set broadcast address
scope {host,link,global} # set scope
label '<label>' # set label
#############
find ${PATH//:/ } -type f -exec ls -lah {} \;
#############
CFLAGS="${CFLAGS} -fstack-clash-protection -fstack-protector-strong --param ssp-buffer-size=4"
#############
* gpg --fingerprint ${HOSTNAME} 2>/dev/null | grep -m1 fingerprint | cut -d= -f2 | tr -d ' '
#############

* CONFIG_EFI && CONFIG_EFIVAR_FS

*  mount -t efivarfs efivarfs /sys/firmware/efi/efivars

                             99999999-9999-9999-9999-999999999999-name
                efivar -w -n 99999999-9999-9999-9999-999999999999-name -f /path/to/file # write from file
  efivar -e /path/to/file -n 99999999-9999-9999-9999-999999999999-name # read to file

#############
gcc
-lthing        # search for libthing.so
-l:libthing.a  # directly include libthing.a
-I/usr/include # search header files in path
#############
cp -a /path/.* pulls everything (including hidden files)
chmod 644 /path/.* sets the directory to 644 and locks the lot of it
#############

