
#############

 [mandoc smtpd.conf.5]

 action local maildir /tmp/storage/home/smtp/inbox userbase <vuserbase> virtual <vusers>

 ^ listen with listed virtual users (all smtp:465:465 clones)

 action "relay" relay

 listen on 0.0.0.0 port 25 auth <authtable>
 

#############

 userbase
 action name method userbase <table>
  public  465:465:/tmp/storage/home/smtp
  private 465:465:/tmp/storage/home/smtp
  junk    465:465:/tmp/storage/home/smtp

#############
smtp/smtpd/smtpctl
encrypt/lockspool/mail.{lmtp,local,maildir,mboxfile,mda}
#############

 smtp - sendmail

  cat > message << EOF
  From: [me] me@localhost
  To: [you] you@localhost
  Subject: subject

  message

  --
  signature
  EOF

  smtp
   -H domain
   -F user@domain
   -S smtp://host.nat:25
   user@domain < message

#############

 smtpd -

  smtpd
   -v verbose
   -d foreground to stderr
   -F foreground to syslog
   -f config (-n check config)
   -P mda/mta/smtp (pause subsystem at startup)
   -T trace
   -D macro=value ???

#############

 smtpctl - requires suid execution
           never going to happen

#############

 smtpd.conf

  listen on 0.0.0.0
  action name method [options]
  match from * for * [options] <action>

#############
   
#############

opensmtpd 6.4.2_p1

-I include path -i include -i :exact_include.h
-L library path -l library -l :exact_library.so -l :exact_library.a

C_INCLUDE_PATH="/usr/libressl:/usr/include"
CPLUS_INCLUDE_PATH="/usr/libressl:/usr/include"
CFLAGS="${CFLAGS} -I/usr/libressl -I/usr/include"
CXXFLAGS="${CXXFLAGS} -I/usr/libressl -I/usr/include"
LDFLAGS="${LDFLAGS} -lpthread /usr/lib64/libcrypto.a /usr/lib64/libssl.a"

#############

   spf - advertise what domains are allowed to send mail over dns
  dkim - sign headers and advertise public key over dns
 dmarc - domain policy for mail that fails spf/dkim

#############

ways to send mail... (smtp from opensmtp is really easy)

mutt - > m(new_mail) - > root@localhost - > subject:testing - > data:testing - > y(send_mail)
sendmail - > /usr/sbin/smtpctl
sendmail -F name -f nobody@localhost -t root@localhost
printf "%s\n" "lock messages to /usr/sbin/smtpctl access... and uid:gid lock port 25 firewall"|/usr/sbin/sendmail -F bob -f bob@internets -t root@localhost

openssl s_client -connect smtp.gmail.com:465 -crlf -ign_eof|
ehlo localhost
auth $(printf "\00user@domain.tld\00passphrase"|base64)
mail from:<me@localhost>
rcpt to:<you@localhost>
data
From: [me] me@localhost
To: [you] you@localhost
Subject: subject
Mime-Version: 1.0
Content-Type:multipart/mixed; boundary="abcdefghijklmnopqrstuvwxyz1234567890"

--abcdefghijklmnopqrstuvwxyz1234567890

Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable 

plain text

--abcdefghijklmnopqrstuvwxyz1234567890

Content-Type: application/octet-stream; file="file.txt"
Content-Transfer-Encoding: base64

CnJvb3Q6eDowOjA6Oi90bXAvc3RvcmFnZTovYmluL2FzaAp1c2VyOng6MToxOjovdG1wL3N0b3Jh
Z2UvaG9tZS91c2VyOi9iaW4vYXNoCm5vYm9keTp4OjI6Mjo6L3RtcC9zdG9yYWdlL2hvbWUvbm9i
b2R5Oi9iaW4vYXNoCnByb3h5Ong6MzozOjovdG1wL3N0b3JhZ2UvaG9tZS9wcm94eTovYmluL2Fz
aAoKaW5wdXQ6eDo1OjU6Oi86L2Jpbi9mYWxzZQphdWRpbzp4Ojc6Nzo6LzovYmluL2ZhbHNlCnZp
ZGVvOng6OTo5OjovOi9iaW4vZmFsc2UKcWVtdTp4OjEzOjEzOjovOi9iaW4vZmFsc2UKCmRkbnM6
eDo1MzUzOjUzNTM6Oi90bXAvc3RvcmFnZS9zZXJ2aWNlcy9kZG5zOi9iaW4vZmFsc2UKZG5zZDp4
OjUzOjUzOjovdG1wL3N0b3JhZ2Uvc2VydmljZXMvZG5zZDovYmluL2ZhbHNlCmRoY3BkOng6Njc6
Njc6Oi90bXAvc3RvcmFnZS9zZXJ2aWNlcy9kaGNwZDovYmluL2ZhbHNlCmRoY3BjOng6Njg6Njg6
Oi90bXAvc3RvcmFnZS9zZXJ2aWNlcy9kaGNwYzovYmluL2ZhbHNlCm50cGQ6eDoxMjM6MTIzOjov
dG1wL3N0b3JhZ2Uvc2VydmljZXMvbnRwZDovYmluL2ZhbHNlCgpodHRwZDp4OjgwOjgwOjovdG1w
L3N0b3JhZ2Uvc2VydmljZXMvaHR0cGQ6L2Jpbi9mYWxzZQpwMnBkOng6OTA5MTo5MDkxOjovdG1w
L3N0b3JhZ2Uvc2VydmljZXMvcDJwZDovYmluL2ZhbHNlCgo=

--abcdefghijklmnopqrstuvwxyz1234567890--
.
quit

#############
MIME
Content-Type:
Content-Transfer-Encoding:
MIME-Version
Content-ID
Content-Description
#############
EHLO domain.tld             sending from
MAIL FROM:<user@domain.tld> sending on behalf of
RCPT TO:<user@domain.tld>   sending to
DATA
From:
To:
Subject:
message
.
-------------
^ data segment From: To: can be spoofed ?
  confused as to why its sent twice
-------------
recieves from server... checks ptr
recieves from sender... checks mx spf dkim dmarc
-------------
drop - server
drop - sender user@domain @domain
#############

debuggery...

on start - reads /proc/sys/kernel/hostname and does a dns lookup < - hangs if it cant resolv its own username
printf "%s\n" "127.0.0.1 $(cat /proc/sys/kernel/hostname).$(cat /proc/sys/kernel/domainname)" >> /etc/hosts


vdomain
vuserbase
vusers
 root public
 random private
 random private
 random private
 @ junk

#############

listen on "interface"
 ["family"]
 [port "port"]
 [tls|tls-require|tls-require verify|smtps]
 [pki "pkiname"]
 [ca "caname"]
 [auth|auth-optional|<authtable>]
 [tag "tag"]
 [hostname "hostname"]
 [hostnames <names>]
 [senders <users> [masquerade]]
 [mask-source]
 [received-auth]
 [no-dsn]

listen on socket [mask-source]

#############

