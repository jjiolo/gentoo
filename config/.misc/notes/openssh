
#############
dropped openssh for dropbear
#############

-------------
[dropbear]
-------------

tldr ;

 * init dropbear -r /tmp/storage/.sshd (no ${HOME})
 * nftables lo outbound root rules (doesnt privdrop forwarding)

 doesnt

 * sys-libs/zlib is slow (45mb/s cap)
 * --enable-zlib forces it on, no -C(ompression)
 * -D(ynamic port forwarding) (dbclient -L 443:google.com:443 172.16.0.1) (net-proxy/microsocks ssh forward from localhost ?) 
 * X11 forwarding (see Xephyr forwarding below)

 does

 * dbclient 172.16.0.1 tar cC /path . | tar xC /path
 * tar cC /path . | dbclient 172.16.0.1 tar xC /path
 * nc -lks local:/dev/shm/qemu -e dbclient user@172.16.0.1 nc local:/dev/shm/qemu
 * dropbear+sftp... ebuild+tested (remote object access)
 * dropbear+sshfs+fuse... ebuild(s)+tested (remote mount access)
 * dropbear+rsync... ebuild+tested

#############

 dropbear Xephyr forwarding -

 setsid Xephyr -ac -nolisten tcp -listen unix -nolisten local :4444 </dev/null &>/dev/null

 local: nc local:/tmp/.X11-unix/X4444 -e dbclient user@172.16.0.1 nc -ls local:/tmp/.X11-unix/X4444

 remote: dbclient user@172.16.0.1 DISPLAY=:4444 setsid dwm-guest </dev/null &>/dev/null

 ^ works then terminates the nc session in dropbear ? (missing -lk because no -e)

 ? nc local:/tmp/.X11-unix/X4444 -e dbclient user@172.16.0.1 nc -lks local:/tmp/.X11-unix/X4444 -e dwm-guest ?

 ^ that would keep netcat open but attaches dwm to input output ?
   dwm stdout/stderr now goes into X socket ? </dev/null &>/dev/null to fix it : /
   took ages to get testing environment up...

****
  local: Xephyr -ac -listen tcp :13
 remote: DISPLAY=172.16.0.1:13 dwm-guest
****

#############

sshfs -o allow_other,reconnect,auto_unmount root@172.16.0.1:/tmp/storage/stage3 /tmp/storage/stage3
cd /tmp/storage/stage3 ; ./2.shell ; emerge -av busybox...

[Errno 1] Operation not permitted: b'/busybox-1.35.0-r9999/.ipc/lock': chown('/busybox-1.35.0-r9999/.ipc/lock', -1, 0)

random errors on stage3 chroot, did actually build, couldnt pin a single cpu core ?

-------------

* sshfs -o allow_other,reconnect,auto_umount user@host.domain:/path /path

  leaves remote node uid:gid
  allowing local uid:gid access
  no visual difference as to wtf

-o idmap=user 

-o workaround= < - blindly using defaults after finding list of things that break
   auto_umount < - wont fail or attempt to SIGKILL everything with a path open...
   sync writes, readahead, readdir, cache, directio
   symlinks < - nothing ever goes wrong with symlinks
   kernel_cache < - 
   -o uid,gid ? covered by idmap ?

-o allow_{other,root} < - changes default assumptions of run time arguements

* sftpd/sshfs - object access || remote mount

-------------

#############



#############
old notes
#############

openssh built in crypto libraries only (no open/libre ssl)

leave compression on server side...
leave compression off client side...

manually append -C to ssh/sshfs/sftp as needed

* real remote benefits more from compressed (upto 20-30MB/s)
* lan benefits more from uncompressed

#############

multiplexing sessions to reduce tcp overhead

sshd:  MaxSessions   13
ssh:   ControlMaster auto

#############

lock remote command

ssh_config RemoteCommand LANG=en_GB.UTF-8 tmux -S /tmp/.ssh new-session -As ssh # not enforced
sshd_config ForceCommand LANG=en_GB.UTF-8 tmux -S /tmp/.${USER} new-session -As ssh # enforced Match filtering
.ssh/authorized_keys command="" # enforced Key filtering
ssh-keygen - sign command in the client certificate # enforced Key filtering

#############

sshd - ability to fork a command returning AuthorizedKeysFile and AuthorizedPrincipalsFile

#############

ssh -N server.localdomain < - port forward only backgrounds the process with no interaction

ssh -D localhost:9050 server.localdomain < - ssh can replace tor for nobodies socks proxy

ssh -L from:port:to:port
       local    :remote
ssh -R from:port:to:port
       remote   :local
 * from:to easier to remember L local R remote

local  forwards requests from local to remote
remote forwards requests from remote to local

#############

socket multiplexing 

sshd_config MaxSessions X
ssh_config  ControlMaster yes
ssh_config  ControlPath /tmp/%h

ssh -N remote.com < - start a master session
ssh remote.com < - multiplex all further sessions through it

#############

