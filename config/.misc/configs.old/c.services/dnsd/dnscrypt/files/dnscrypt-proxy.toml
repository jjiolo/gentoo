
##################################
#         Global settings        #
##################################

## https://dnscrypt.info/public-servers < - pulls all servers from a hardcoded domain.tld

# leave it empty asks for require_* settings only listed below
# or pull for server name ignoring require_* settings listed below
# server_names = ['scaleway-fr', 'google', 'yandex', 'cloudflare']

## List of local addresses and ports to listen to. Can be IPv4 and/or IPv6.
## Example with both IPv4 and IPv6:
## listen_addresses = ['127.0.0.1:53', '[::1]:53']

 listen_addresses = ['127.0.0.1:53','[::1]:53','172.16.0.1:53','[fd01::1]:53']
 max_clients = 250
#user_name = 'dnsd'

## Require servers (from static + remote sources) to satisfy specific properties
ipv4_servers = true
ipv6_servers = true
dnscrypt_servers = true
doh_servers = true

## Require servers defined by remote sources to satisfy specific properties
require_dnssec = true
require_nolog = true
require_nofilter = true

# Server names to avoid even if they match all criteria
disabled_server_names = []

#############

# force tcp to route through socks proxy (will increase latency)
 force_tcp = false
#proxy = 'socks5://127.0.0.1:9050'

## HTTP/HTTPS proxy Only for DoH servers (force an http/https proxy ? point to itself ?)
# http_proxy = 'http://127.0.0.1:8888'

#############

timeout = 5000
keepalive = 30

blocked_query_response = 'hinfo' # refused/hinfo/ip_response? format 'a:<ipv4>,aaaa:<ipv6>'

lb_strategy = 'p2' # p2/ph/first/random
lb_estimator = true

log_level = 2 # 0 very - 6 only fatal
#log_file = '/storage/services/dnsd/logs'
use_syslog = true


## Delay, in minutes, after which certificates are reloaded
cert_refresh_delay = 240

# enable ephemeral keys for dnscrypt and DoH (by removing sessions)
dnscrypt_ephemeral_keys = true
tls_disable_session_tickets = true

## 49199 = TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
## 49195 = TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
## 52392 = TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
## 52393 = TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
##  4865 = TLS_AES_128_GCM_SHA256
##  4867 = TLS_CHACHA20_POLY1305_SHA256
tls_cipher_suite = []


# check system configuration... then fallback to cleartext dns to cache server list
fallback_resolvers = ['1.1.1.1:53','8.8.8.8:53', '9.9.9.9:53']

## Always use the fallback resolver before the system DNS settings.
ignore_system_dns = true

# wait upto 60, or 0 dont test or -1 wait forever (network connectivity test before starting local server)
netprobe_timeout = 60

# address to check if the internet exists... (still starts as none root ? no raw sockets)
netprobe_address = '127.0.0.1:53'

# forwarding and cloaking... apparently a thing plugins ?

# run the local server regardless of upstream for local resolv
# offline_mode = false

# add txt records to all outgoing queries ? access control section ?
# query_meta = ["key1:value1", "key2:value2", "token:MySecretToken"]

# max size in MB - 0 for unlimited.
#log_files_max_size = 10

# How long to keep backup files, in days
#log_files_max_age = 7

# Maximum log files backups to keep (or 0 to keep all backups)
#log_files_max_backups = 1

#########################
#        Filters        #
#########################

block_ipv6 = false

## Immediately respond to A and AAAA queries for host names without a domain name
block_unqualified = true

## Immediately respond to queries for local zones instead of leaking them to upstream resolvers (always causing errors or timeouts).
block_undelegated = true

## TTL for synthetic responses sent when a request has been blocked (due to IPv6 or blacklists).
reject_ttl = 600

##################################################################################
#        Route queries for specific domains to a dedicated set of servers        #
##################################################################################

# forwarding_rules = '/storage/services/dnsd/forwarding'

###############################
#        Cloaking rules       #
###############################

cloaking_rules = '/storage/services/dnsd/hosts'
cloak_ttl = 600

###########################
#        DNS cache        #
###########################

cache = true
cache_size = 4096
cache_min_ttl = 1800  #30m
cache_max_ttl = 86400 #24h
cache_neg_min_ttl = 60  #1m
cache_neg_max_ttl = 600 #10m

##################################
#        Local DoH server        #
##################################
[local_doh]
# listen_addresses = ['127.0.0.1:3000','::1:3000']
# path = "/dns-query" # http(s)::/127.0.0.1:3000/dns-query
# cert_file = "/storage/keys/ssl/service.crt"
# cert_key_file = "/storage/keys/ssl/service"

###############################
#        Query logging        #
###############################

[query_log]

file = '/storage/services/dnsd/logs/queries'
format = 'tsv' # tsv,ltsv
ignored_qtypes = []

############################################
#        Suspicious queries logging        #
############################################

[nx_log]

file = '/storage/services/dnsd/logs/suspect'
format = 'tsv' # tsv ltsv

######################################################
#        Pattern-based blocking (blacklists)        #
######################################################

[blacklist]

blacklist_file = '/storage/services/dnsd/blacklist.domain'
log_file = '/storage/services/dnsd/logs/blacklist.domain'
log_format = 'tsv' # tsv ltsv

###########################################################
#        Pattern-based IP blocking (IP blacklists)        #
###########################################################

[ip_blacklist]

blacklist_file = '/storage/services/dnsd/blacklist.ip'
log_file = '/storage/services/dnsd/logs/blacklist.ip'
log_format = 'tsv' # tsv ltsv

######################################################
#   Pattern-based whitelisting (blacklists bypass)   #
######################################################

[whitelist]
# whitelist_file = '/storage/services/dnsd/whitelist'
# log_file = '/storage/services/dnsd/logs/whitelist'
# log_format = 'tsv' # tsv ltsv

##########################################
#        Time access restrictions        #
##########################################

[schedules]

#########################
#        Servers        #
#########################

[sources]

  ## An example of a remote source from https://github.com/DNSCrypt/dnscrypt-resolvers

  [sources.'public-resolvers']
  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/public-resolvers.md', 'https://download.dnscrypt.info/resolvers-list/v2/public-resolvers.md']
  cache_file = '/storage/services/dnsd/public-resolvers.md'
  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
  prefix = ''

  ## Anonymized DNS relays

  [sources.'relays']
  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/relays.md', 'https://download.dnscrypt.info/resolvers-list/v2/relays.md']
  cache_file = '/storage/services/dnsd/relays.md'
  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'
  refresh_delay = 72
  prefix = ''

  ## Quad9 over DNSCrypt - https://quad9.net/

  # [sources.quad9-resolvers]
  # urls = ['https://www.quad9.net/quad9-resolvers.md']
  # minisign_key = 'RWQBphd2+f6eiAqBsvDZEBXBGHQBJfeG6G+wJPPKxCZMoEQYpmoysKUN'
  # cache_file = '/var/cache/dnscrypt-proxy/quad9-resolvers.md'
  # prefix = 'quad9-'

  # censors some websites...

  #  [sources.'parental-control']
  #  urls = ['https://raw.githubusercontent.com/DNSCrypt/dnscrypt-resolvers/master/v2/parental-control.md', 'https://download.dnscrypt.info/resolvers-list/v2/parental-control.md']
  #  cache_file = '/var/cache/dnscrypt-proxy/parental-control.md'
  #  minisign_key = 'RWQf6LRCGA9i53mlYecO4IzT51TGPpvWucNSCh1CBM0QTaLn73Y7GFO3'

#########################################
#        Servers with known bugs        #
#########################################

[broken_implementations]

fragments_blocked = ['cisco', 'cisco-ipv6', 'cisco-familyshield', 'cisco-familyshield-ipv6', 'quad9-dnscrypt-ip4-filter-alt', 'quad9-dnscrypt-ip4-filter-pri', 'quad9-dnscrypt-ip4-nofilter-alt', 'quad9-dnscrypt-ip4-nofilter-pri', 'quad9-dnscrypt-ip6-filter-alt', 'quad9-dnscrypt-ip6-filter-pri', 'quad9-dnscrypt-ip6-nofilter-alt', 'quad9-dnscrypt-ip6-nofilter-pri', 'cleanbrowsing-adult', 'cleanbrowsing-family-ipv6', 'cleanbrowsing-family', 'cleanbrowsing-security']

################################
#   TLS Client Authentication  #
################################

[tls_client_auth]

# no idea ? client cert for incoming DoH server ?

# creds = [ { server_name='myserver', client_cert='client.crt', client_key='client.key' } ]


################################
#        Anonymized DNS        #
################################

[anonymized_dns]

# yes...

# routes = [
#    { server_name='example-server-1', via=['anon-example-1', 'anon-example-2'] },
#    { server_name='example-server-2', via=['sdns://gRIxMzcuNzQuMjIzLjIzNDo0NDM'] }
# ]

# skip resolvers incompatible with anonymization instead of using them directly

skip_incompatible = false

#############

## Optional, local, static list of additional servers
## Mostly useful for testing your own servers.

[static]

  # [static.'myserver']
  # stamp = 'sdns:AQcAAAAAAAAAAAAQMi5kbnNjcnlwdC1jZXJ0Lg'

#############

